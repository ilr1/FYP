(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     71947,       1582]
NotebookOptionsPosition[     69457,       1533]
NotebookOutlinePosition[     69799,       1548]
CellTagsIndexPosition[     69756,       1545]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "*", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "10"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795388439605027*^9, 3.7953884792795787`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"133769e7-b640-4691-9418-bfb38eff5b77"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81e8Xt0JIZYvsvce1rvE53IuLiOy9N2VWpIxEIaFCpVBkpFAoFA8V
ifBFIRFChIzs+fP7677e9/Oc54zn/TrnvPndzp3xpCAjI5uhISP7/6/Ard0n
j3iatDKGP23/spfVeE0rzhvok4slzTOGJil+0mq6+KJAzKcc44mNMaGQ29C6
rTzhcCT1NcbrXEmv6cGCtcgFe1P7NGIFDQ08jEJiWBTr/pv9vPfY7xfaovlJ
Klhmhq7Wzs1WbCVrbnPbmIiVH015vxHZjnXozd4uZjPFPqX0kFa9uzDnbinH
sFVrbDGe4ffF0v8w84A+XCeFK3b5fbn4el4vxhXj09RG8MboKMwDwrO+YjVh
IlS/f5zFMmHtxb+b/ZiHCAEnuBaKCUbfWwqOH8TWBD4Y+ulHYBXvNHCLkUOY
1D35axxB0ZjGzs/zZ4OHsbYZQ9tCratYG/5q7Zz3T4yFkt2mXDMRe6bBfEWp
fBSzP7c28a8uGVsa8sgNKx3Dvui/GZ12TMNUL9WgV4Xj2H+FIy8fCNzGrpyg
HV/O+4XxJo786ZTOxD7U2lIq5ExgJ7QMB2Nj72F0ts+EgrMmMdOAbt0w3odY
VpaJ98LN39gsjcK/ydzH2Ihy3nWZG9OY2wWnn7LjBZjQt6WSwPgZrP8XmLYY
FWEVLHfnZiNnsV45jZeRd8uwtVdTRyTPz2HHsnSTksPLMU1zVVm/4HnM767J
Gy+tSuxz+lDwtPcClvJHuflWdBV2PTuz7bb8Iqa8R7sbplGDSflgdorli1jK
5703ZfRvsBCa9EshpUtYwmjP+8WRemxPF9ewmPcPY98KulUt0Izlsw6bpPGs
YIkjkRmHtd9jxMlrP2VzVrC1wKCLTp4fsOT4frJzWatYjOuVM/XvWjCO95GE
+ZvrWO+5kUt0D9qx+gzBvhT6DYw6ftUzrL8Dc3Lr8JC6sYEl3ed3smDpxArI
eRL84zcxO/LhGlq9bkwemj7NRG5jQ9wBF9ie92B9R/1sb2xsYyG62juZ0Itd
/Mn0R+z8DtZ3SMsps7sXa7jiQe8TvIt93VA32PvVh7maHMmhWdjFZvZDj9h4
fcWoeGqkigL2ME2uV4+Zf33FDN/RmEx572PUyqYjsW3fMPl9t1W2xX1sfu7W
5E18P5bC59wpqEEGOsu0Rx0e92MxTQwCGjFk8Mb/qrYK2QAW5lYXbvGBDN4Z
14X6mQ9gPpQ+bQG05FDpS+TSfjCAORSwnrx2ihxkl1gf0vQPYKa674MeppGD
nI9HIz31IEacCvpQ3UcODEPV3A9FBzHVRB6OTg4KyOX7lXVEfRCTEuvwn3Kg
AIqd3u5KbBDja4to3MujgH8s9ffGcIMYs58oM/skBcB2ZsAG5yBGTf/VS1ac
EtjQ21HLvwPY1rO4Ov1ASijkk+NzqhzA/p6SY3SppASKthSHSLcBbHx+2PXi
KiV8HCIQOMkHsG+pydVpalTAW7YYVJ7Sj32WVTtccpkKnMMSf72m6scauqcc
mpqooO8zn3+VzzfsZfCdisFDhyClVIhT5s1X7CmTDtWywSFYYcl+Xr3ch91/
tWBNl3oIXuaYUkyw92GpFg+fCfQcgpD0/0LtRHux2FXDfTwbNRTTZOm/5+vB
wjI3zpjbUYN35u2jPZT/YT4qT5/6P6IG6qZTrNfzujCHAfOtq+PU4FqSS9lE
/wUzjSA3yRGhgWtUg4Rl0meMeKI8v8qPBs4MRT3ps27FVOsdVjte0ED8Ajet
iuoHjG/3dc6uMi2s9I5wm3+vw1geeS6yXqKFyj+3r2defYXRYsxEmUZacDkp
2k7MK8IWYs7OOukfhiuyZpdlSjMax/m5sQvJhyElYthdarS08VtzW8atrsMQ
wvsN20itaWygEsYjazqQr2kovD3zofFlYc/NgQd0cGe3oittq63xqV7M2OJP
Orixw/piCtfVmHp96Dq/Dz14c6KdtGNfGx0ZMvrjLjKA0EnGuwUBo42mzzHJ
B28Z4HzVi47QrbFGosn8lVdkR6Di0rNXZbd+NUqlkUQmrh+BhKMKot6dU407
zPthuvcYQbWzZ3Lu5nzjlyPKh6kcj0HSQ7/rBR9WG3uMmLI7o44B9Uf6jAd3
1hoHbvwVuZdzDCYm8AP67uuNE4eKiDI/jsH2ve3YwO2Nxp1d9hgb++OAaQgJ
+B7ZaaTQWGEUvHQcVoZzz6W17TTSRnY/nL9/HJLzS4PLYncbmdeu18d9Pw5X
Yp+KWUzsNXLgPA2Nt44DsS93RDR1v5EnRHuQ/QQT3IyM0QNOMiTxd3OtzJYJ
3KYDWIuryJCc1LdrFyKYgMEv52niLhlS9nvJonOPCfD3+g4v65AjjeLUJwy1
TCB2BT9SG0+OdKb8FPoHmCDdN+fky2ZyRBLSb8rfYAJ3vqsyL3bIkYmboGkA
BzO42ruuxSpQIIu8/RFlVWa4aT80S+5BgWxHhgLJbZihDM8nTplOgZy43+y0
X2AGz0STK/a1FMjD7k5yZhYzrD0dvjr2gwL5ZQedcH3NDIzuh54HbFOgoG+n
SiT7mWF+g9vuKwslOs8irrq2xgzjC3/+rIhRoqgzh1oRGwucWhzpLlShRHFp
Y5bJyizQ2CaT/x4o0fXOdxOWVizg09klIkmkRKkM90P5zrMAbYFuWJ02Jbpj
eJ5i9i4LUBZhq6ZqlOj+9TPp1dUsML21G90lQYlyW2T4Yr6yQJfHBS8ONkpU
QEVfbrjKAg+OqiUePYivVOe3JisrKyw4bzreH6RAFTHvO37iWMGRup85r5IC
1TTk2pdasMKn65q3Dl+lQG93Lv0JC2OFlBs+V5uMKVAz3iYCu8MKDwWio6uO
U6BPF3G0dFWssPEWdrs7yVFnzbGsvl5W8BvTOEdzjRz1rcwJ5/5jhbrMWyaG
OHL0XaGtypeZDeq3uMRSf5ChyRexPXtn2IDL6t+zVXYy9GfO0bUthA3szFvi
T1jtNy5K4BdvZ7DB7726q1xn9xp3ni4fEe9hA7WLOW/vhB7wb7Iz598SG+w9
/PGI03W7kVbwmWTDcXawEctquQFbjSy57gbmZuyQYyoYEPl1vfHEMDZwMpgd
jBsLUmSS1xr5uLi9p9PY4YaR+GklxdVGyay++Mvd7PCtn9Z+0G65UeeWLio6
zQHUn2rWfnJNN8YYVpX0nOWAk2kPDew+TTQ2HBK8vXuTAyrmU9qmHcca8VFk
XuYdHOAzZbmvfbOvUdG3nn6fxAmbUa0yly+9x4QI8tZWOidAIg6d8BT/h7nt
5UKs6wmQzdqLv+64iuXVMkqUxZyAUB1E75i5jnHLze2QN56AhEX6vQHmHYz1
ZNHj5+pcsHqm5cqXTAqgXuf+S6XEDRW9D8v1iuiB+DK5X9aCG9gkyDmXmxgg
LnAL2YVyw59Cx1fdg0dg71f/7YpKbggSq/9Wv38U1rsz1BxkTgKVAG+UwBEm
UE4hF0w0PgnRDH3dxCQmCNMPYngZcBLSIgXFM6iYYfGd8U+aZydBOP+E2PoC
M0yX0l57JcoDl7763drMYQURrwtnR/R4oPJi9e24PVbw4J+yPuzFA+eN5yL/
s2eDxz8stHHXeEDPDFdTX8UGo1nvJZwLeCDFtcCR/TA78JgrsCS954EHut1a
9Tbs4MCYv1s1zgPOUwazV56ww2D8lW46fl4I1aJk/yTOARwwX6sEvBDeT3WU
3JMDrLbtn7g488Kwm/Eous8Bd2o+pyRf4YXdox6tvz5zQE+w2vmah7wgQkt3
Qn+VA45JFzuPveWFw6vrFm2cnGAyzWbA8IMXWkwCxQ1VOSHlyTUFlW1eeD+e
klRqygmesltH5I/wQQZtXF2HGyecGkos5ODhg5uOpwxJ5zgBl8iqSSbLB9+0
om6IhnECt+KTvt8YH2zV0AoZBnMC1U+5gC5TPuD9+2c43YsT5pIaKF+78oF+
XEPBuDkn9CqfevAohA9Iud/zBNQ4oW58UCHhKh88Nf2hi2fjhMep3p8D7/DB
dOF9N5ZZDkjCr7paFvJBjPtluUevOSB4Km5To4YP4nlk3VovcYBNxrF0oVY+
KP30RD5OhQNA65EYwwAfTA4FBL7/ww5ifyTRv2k+GIi1uBZ3lx2OZdZaD23y
gbOOWmatCjv8nO9LKOXih/219NprbmzQcs+NJ0OKH37kz7dwz7LCC93F6ghN
frB4JftV1p8VrjyknyQ58wOVZYfYvBkLeBnci5IL4ocTrI56FW+YwXhVhIUj
lh/sJEz4+NmZgdtYh/D7MT98PGNL5VR/HKg2u753vuKHcGWeMDvy4zBb4BhS
84EfeBPpz3lix6Bu52L+tSl+MPnz45AZ6QjYlpXvC0oIwAuHpC8i4tQANppZ
9OoC8MhVa1JLiwrEqNpl/hkJQObzVTFmPQrYsJ9ybA4UgLY7A6r2zjtYJv3J
ty6VAqDJ0UqlNDqJ9folXXyoKggOpvoijae2G+vYOI5dMxCE25fkW/1EyNDj
5sKiADtBcGKzbg8rpUAhJ5q+qUcJAu4B/eEH9TTo2Od13PdGQbhO/aAlae0Y
Mhb3XGLTF4Jj48m7/fMn0FZyeP2wlRBc28/cYaXnRsV/r10r8BKChOKjHDeF
TiKqqqecCglC4JhR49xhyIvqtKa1jT8KwUS0zvmM5/zIJ3+DnuWrEGhf/rvg
IiaAWKkOf/s+IQSRGK3ZWq4ACmoT9/OhEgbbKdav3fGCiEcKj5NlEQb+WyWv
PiwJovZUw71VQWH4/VKcbthOCIlY+GdcJQjDelHn5gifMOqrueRgaC4Mx28u
K0ZdFkaxnCkix92Fwa90CAq/CiOZqJzF/hBhSBZ2+qEkLoJ+jJTVPYoTBhf/
sRy6iyIoSftdvGeGMARD8D5ZswhSLfhiIvVYGOxWnoWuU4uiKeoRjn+VwmBC
nuT9RU8U3fb9O17bdODfffuMe6wogo69spj/hKFg2+r9/RpR9Ffm6AX9MWGw
IGV7WU2Jopx0Xm3GJWGQGPdmizwmhgxXZOm/kolA/ZHZ8T84MbRhBV8fHBOB
7AGrk7fMxVBhrWmuG58I3FAkuJkEiKEz3K6+4nIiEJ1U9+R4tBgiiw5WXMRE
gN6LQvF9shh6MRa7W3NaBBjKOT+bZIghe2JG62VnEXBVn7mTf4Bpix6nE8+J
gImtIL40RQzVHH5lTx8tAjG8Xb9sYsSQR8B74Z5UEcixidLPDRRDx7t6F7If
iUDpP+4XQRZiqEF+otb5hQig1ZjtpoN4A+6sXBVpEIHHu8HVNxjF0Il1KpP5
LyKgFO1Ph8ZEUastK0fVsAgsLs/1O70QRWFvhccj50Ug6pR7hWuYKBLgVS7T
3hUBZqGi0Y+Koqg7Vu887RFR+Md2JDxpTgRdmbCCLm5RgN1DWhWPRNBgyYU+
Bw1R0JfIzZFcEEYJDNcfCZ4SBToW8vbkm8IIdy7b54+9KPTcuebpJiyM0nC1
OxcuiUIh5xJPjrYQ0spqa9FKFoUvNcXnOVoE0ezmYNqhB6JQxGb6QpMoiPQa
t4Ru14nCWMNiZJu0AFrhp1+w/SwKHKlm9Db3+FF+PFct33dRMLVMC/q5x4d2
DDSMX2yKgmRPdHNEEC962Xc5vE1VDGSCNBtKOjlR8TUPt3EDMaiiWUp8JMGB
Hikbnd62E4Pm/Arpmkg2lJTNIS59WQwiDLl8fm4wIXeHVz/SmsRAXYtBSmCZ
GrFMTBNsDMUhyoDV/6/wCkZ3t0su2F4cHE6/qmj+soOR6dWcTAoQh4XFoCXN
ZgqYK7q6Xp8qDtpveZ2Nkujhoz/PM95ecRC3fxb++SEbnP9nzvTbXgImvtPz
x+4KQkABfn8/QAJK9g6PlNEKg5sl/xzHFQnw3UgoNjvgocnrvx8N8yTgYKOw
ecIsBqKXbkS8mJAAcunZx59HJYFHKsirdVUCss3uJ/C3SAHLsJX5KLUk0JGi
dPCF0kCGCUkziUuCteMtotdpWVhboDshiZeEsqZ/ObMMcjCXt0RNNJKE5yNq
XW5n5WCAonE0PFASIn5h+FBheeh8Vfgl9Yok/DijntAUKQ8fPFLqim5Jwt2K
wvY37fJQxxpahPIkIdG+bUWJQwEqW2zvDFZKQtApv3U2FwUovgCxy82SULvY
NoZ/ogCPxETP0vdJQlLaud+xYwpwZ/CIvdCkJBiVVwR+OaEISUkr+pprkiAw
tsJOdloRYtSHcFY0UsDxsKJ397IinJ9r4j/HIQX/5TNNPCtShICHxYzXxaWg
M8N5frFdEdxMbm3n4aUg89r6ftUfRbDZD5+uNZICRwPyJ2OUODCpcPja4yAF
VKTXI67sOCC6EppnA6UgadVMT0AYB+pMEuVU0VKg+T2Z/Lg0DjrJ7dq+3JKC
8ruuX/llceCydONXZp4UuEufd4qQxMHyaO2uc6UUOG9TONIL4CC+e4ZdvFkK
zJslxb4w4Q50M6fCco8U6P1+VlW9qwgl5Qan6n9JwY1plgfvxhVBIzfCK35F
CtoMHpz82aQInaklMcaHpMHC8Jw02wNFcLkyeJ+NTRouDT4653JWEZYDD1f/
FJGGmw5XtN+pK0K8o1pXsYo0+G3dfStNqQjsxr4zwSRpENM5Xlf1QQFKNe5R
qttKw5ZQ+VerGAXQkGo7SeUnDQFOckEnlBXAhV78TGayNIwZT10XS5OH5S2b
AOccaWDnOl1xHScP8X+uJ4g9l4ZkgnqpUq8clLRN19V1SkO6k+ZJv31Z0Kjl
+Hr1pzQ0uzX2WnHJQmcxaeHUojTgJnXmAqRkYDmxWPDncRnIl2P90y4jBfEX
BjSLBWRAXkN2+CKfJLB509oEK8pAXsmyFjutBKjr+aRQWspAa+WYINtBH4in
ElsVzZaBTleWM9YVAsC2Yn10qVgG0lX/I7204YfiX4nidbUycHvY0tRpmRe+
NP92PDUkA0+3udre658AttiiliAeWfieqUWAYgYo2RXJri2QBZw8+f3eemqk
MW/1Mq5aFngs++lsHI+gzh8JHUYtslC7o/HGnIIJLddPkY38lgVhvtLHWS84
EI9mLy6WVQ6onm4+FyMTRN7bGQ8LbeSA7+xQUEK/LLpjMvc+wkUOnDQ8ztfk
yyGUr/vH2EcOnNPT1xct5BEHaUN57YIcpJ2sXgh7qYA+3XHs1suSg6TXvu9c
iEpo5XfN2olcOVhXClLB/VRCfOrHTi48lYMox7bpL+HK6OJYs29WjRxMt5/V
yb2rggpw3Gn+DXIgJpt99wqPKupODK/BWuSAIUnxVuhjVSQuI0Y5/fXAfjz4
1fp9NWQVGyv+dlgOgF13R+koHsX1fT+dNikHdNFMMH0Zj16I4s57zMuBvLzJ
++kpPPoeeTNHdVUOkF/PCpOhOqLunGpm2JWDdHaNCEKROlLgh5lRKnkoOEOv
bLOnjpzC7h2tZpCHo9nxDnKnNVBS67LSDRZ5+BZ4OqzsngaqOXHKwZFbHs5Y
dnm+GNZA44GFcfJC8sA4oRjPyaWJGJv2ig9JycOdRY2sHjNNhGex6RpUlAeR
rvKJxlhN5OVdufpcXR5SSiLV2ko1UUYdHXccQR40Ga8u93doooYjHjpWRvJg
P8F9qP+3Jpp1eecjYS4PaVSiNK+2NRFHFdutPTt5GGz7rGxHq4WINEHVPW7y
4EP+I/btES0UZNc29NRPHrKqv6W002uhnOcCFJdC5IHoebE2kkILfSKLEjt9
0AdLTy9LNS5pohXzryaCcfIQfvvl11uDmoivSCZ8/YY8kG00BU3WaqJTW4kP
2tPloeN0VWpdhia6aDzWlHtPHnajxLPpPTRRQR5+OjRfHibUhv/7Jq2Juv/d
ZiSVyMPncYIL96IG2tGbx3FXykNl9kvDkVINJHZfz37xjTxsyR2/wuekgSzm
c2M/IHmYj2Xpmj6sgZ7fPtMZ0C0PzPGzz6WM1NH3qWcrMCAPfJvpEe9G8Yga
f4iLdVQeKjQe/dw7i0dOo6+93y3Ig+3devbecDWUpHg8NX39IL+Etrikv6qo
JsGvynNfHhgKPV6ru6giRumT5IxHFUD7FF/ejIwKwsecFx1nUwAZTJ7rRIoy
8urtMq7hUQDHc+NTz8aVUENE3H0nGQX4yynvfS4Kh861/FYsN1YArrT0dS0v
eYSgzF/KSgFSPxzdPR4jh47VBz0pcVIA4wwyWBWRRRXlm0wF5xSg1e/h58nT
kmg5m345O10BDCp8hhK5BdF5f9mKuK8KYEKXPdmWN9bYMvnv9/6wAlTR+j4f
Y5nA2F3e8F6eUgA+qidcIVS72BsL7VsX1hVA6ziXmGz3MdjUND8bwKkIU3/p
90xoBSDq2AUpK0dFcFx4+ejqRQXoSFL36PVUBHmGVE+GHEU4eYgsx/SgD+8L
b7as1OOgYfM6vVG0Ily/uzhyeUEZyH7d/4PlK4IPnVhQG5c6mDo6C7wrUYRW
ga6nBRwakN8vaId/qQg/mW4cFT2qCTodZW2494owG7L2bPC3FlytbigWn1SE
5n3j2RJebeiTvTr6dF4Rjs10bDnFaINQqT6H0JoibEfVzFb90IYwIQbT/L2D
OXAa/+AGTgc+POpO5KHBgeG6/F59og6wcN5tfHAUBwo6xVJS33TA87btOgfH
wdxL5Q6s5yUA9fVxL2ZxHGyZjXg3PyGAFUXRozR5HJSpdW5QjBCgKMr/2xE8
DpKOBTuuMBFhY02WMVkHBwtbCu5XdIhACl7RpTXCwcAlMUJSABGyZ99cvmaO
g4iSY88o0okw43m5msIBB/+w9Y+95UTAj2rPR3vgINQ3lDj7iQhJdtTCuwE4
eCcZ46H6gwhacgxrM2E48GlR/rU6TYSlQ0yt36Jw4L8QJXhrkQgFQ+zZ7+Nx
UDN33XhrmQg2lSd9K1Jw8Go/qF3m4Dt9oiD+4Z2DuZ0CxsIH9g0O4vRJOThQ
E2/s6P9OhBAF2R/nC3AwJDidpn3gX5hW6bl7GQ725Y7LO1cQYWAYf8W06iDf
fw1ZMreJkPIKTmu+xUGMgsih8iAiYDf0+CQ+4MD7oc3xMRIRlp1OLbF14OA5
G/eLFi4iPMWdaabsO9gj0vzF3GcIYEtnc3tx6CDeB3ni9ZUEYBh19Bj+hYPP
E8Q3fWEEQNXuSp9ncbAznqT6WoEAYcm+1K//4aBOODDAf1YHRF3P9T/ZxgFz
VWjo9iMdSGW4FHGZXgluJ26QRta0QXs8xtCPWQnKb+gLnnqgDSuvE7isuZSA
fNx/sh2vDfbuGe/kJJVgLaKDUs8fgFEtO/WkohLgVsaJHRsYNDM+cqZTV4Kb
u79Ptx7HQKyuhHzCUAl+r9DH54tpwtqxJt0sPyV4Llk/4LigCqVTLWzxIUqg
2XA1frBDBRzfdvwOilQCu/pf268fK8MH74EbhklKwBlN6fVIFQfpDQtfdksO
7sMsjwmLy4BUAI+Vx4wSSES/vM1/mRHcWy95yfsog03gCxEjEg55aIiYrJ1T
hjP5S/tVtUrIq7Jbqf6CMsSp9gbMi6ognwfCh3QTlWGnpaXIelMNnT3X9cTm
qTIssLwbo/PCUNBERPLJF8pwvSvy8aItoGBbodDxamW4EXiEdWAXUBghQifg
ozIUPuwZmlfXQZHsgmPRE8rgK33i0Z0UIopK+fKJOKcMTu6z5g1suugy+cWK
wyvKsE+JMd/L0UUxsx3RtylV4EJ0jNXn+3oozuWCtw29CuiJ6AX2M+mjq1/5
T59kVoGgT8mtFAn6KKHxPE+RgApsfHwmIuVIQtdx/NQBEirg9FH/3TQioRsl
7fNyCiowk1TwBXgNUBLP+a+raioH+z1/ANtFA5Rym+9dnbYKZCm6DZ1qN0Cp
tO0F0QYqYHf1551PHIbo1uXwFKKZCkTuyJmdczFEacu8YYdtVaAxkP2Y2GND
lOH92b7TRQU2kzC+oWFDdOdHGOG2jwpcKngrEsJshO6a8UraBB3cN6cqMqBj
hDJb2phOXlSBQuHBa5v+RihbPWxrLFoFkkr/Y/+QaoTuV/CMP01UAerWUl7R
Z0bogXBbm/8tFai8oGDD3GSEcu6HVsplqUDPc87NyG4j9Ogoz73VRyowdUr9
rdmgEcqL/xRT91QFvoglj6cMGaH8zRCf6Bcq8MH5mapgvxF6fPakKbFGBQSj
RbiOdBihgl+tKocbVGBt7VQksc4IPbUJ4e38qAIO4VXDH/KNUNEXbprbX1Qg
YMDaOznOCBXrtP61/qoCypesvmU6GKHS18HfuIdVQKbW7MZvWSNUJsXdMDah
Akv3vGOidwzR8/yWwqdzKpDwos3JrdkQvWALvum/ogL1sOB/N9YQVSRzhcvt
qEDeEbc7vHhD9JKsxWGVUhVyhoT8Ds8ZoFfhQcQ6elVwtnwl5JhlgGqcPzIT
uVRB5l6pU+h3EnrTd26bVlAVVKIa4s6EkFCtwYlfXyRUYdicp6ePkoTeKp57
aY1XhaqLgQKMLProXTHnfW4dVRDebUJ/M/RQw8kPsWMGqhD9l7XxI70eaqLh
NPO3VYUOgkFc/SwRTT2RMRx0VYX2iZ2YXl0iYgAiQd9PFaSHn6eduUdANhfP
KQleUgUa84cfRaR10ML0R86hHFX4V3T63A6nFmK5NsRkUKgKlAsi7NJnNRCe
f4n+9XNVmK1tCGV9g0cJttx7GQ2qcJltU/rTwbw/+Tlk3HBUFQqzRwyZfGWR
jtf1oTfTquBxrAjvniCJfCge9YksqYJFvK7py0xRVIVva6GgUIPEjQShLTFe
ZPSM91mdoBoMLFtXjj0YwiJSOkIlvNXg5rRKhBte/kAfjgdkn1ODmodt72ZN
FeHDh3VP6otqoJOoW97poQTHdgVsxq+rQWNI2hN8nBoUBUZo3C9Vg6/ei+Xh
TQAdh28p0b5SA5pzYoeba7VhubBA5ny9GvD1Cw3bvdABrZEuvjMdasAprUtl
lEyEryYih+j+qsHGE6cVAgMJtv6o711YUwOBqy1FjD9JwJdotj65pwbm5Bd9
F58ZQEBj1EzTUTykWYfGrigYQYZ9xrgsBx6uvrklkz1nBG/Wi4Ye8uHB/tOF
RsvcU0Ap1/slQh4Pk1FvRxUWjEGsY7rltxoe8tVd90eTTcDEZ6/RUgcPhHJl
QgvfaQijYql9b4gHxrd1JS+en4b7eeIv5c3xYPCTyInjNAWkgT3LtcdDShfL
RVdrU5gasCg44oGH3E9iKaR0U2AI93t4KQAPwll9N3pbTEH+eEzmTBgehIaj
WubXTaGOtl+sNQoP7dUjoWX8ZqBDJlNfEI8HqQe9MYH6ZtC+Hm8cl4IHG7bx
OQFfM7BYGPrpfAcPnFf7nzYmmMGPKYUQzRw8uE5yp6vkmYHnyA0qrgI8MK/1
XouuNoO/X0czN57hYYa33u5mixmc/6Ii/u0VHroV+iese81g/0Nq/at6PNzI
G9v+NmQG199OGqe/x0OBYORlylEzOFalMXq2/QA3njDt/2kG957dDjnVi4c4
9i+exgfnBZ78oZIYwoOzSF6Da48ZlN7XzqL5hQft8GG/4x/NQDEjW3zyDx7e
re+k2L0yg7c3Fuqbl/Fg1GZlr/HQDHRj9UzytvDgzZLB/zrODDovPhy9TKEO
c1Hd2h3uZmAVtBJiT6cOihfuKl0BM/jpbXRIjUkdqKh9U7s5zMDH+XEW2wl1
UPZTWmudM4VFq03xFX51sHF2lvV7awoUekUm5fLqIMsYkN1uYgrJmnujKWrq
cC40/sOD46bAomQZ6qetDhaPrYOD806DsBBltrCZOuxf2nt3JM4EXnDZSVDa
qsPVBkrPJ1PGoMxc+XbU5QCTFXOqEYyBROE89iBIHeDY27PjE0bw32Z1aMRF
dVCSz+TBSxiB3RIDtXWMOhT4VP7l9DEE/9E6CaY0deDL/mdyrJMEqQ1sYdfL
1UFruTP7nr4usNcEUnu9VodnLe1XJi2JkPf8Qzah8SAe/v7Pok4EqMwJebfX
qQ7Dewt7Po4H+2hkJ3X4X3XgCGi8bYnHg2OI8L0zawf1yxPs6aNQhSnfKEm5
PXXISAhh3mhWgnUbCdPZIxpw7rN8nMaBrjuhknDPVVoDRNOc2vZbeMDln6aU
SYAGuLousAQsiaIjTGTdfWEa4PfmN3ulmTSqk2sOtb+sAWQ3SxvJbeQRy1m9
ep9UDfjtMWNtVKGMPk2bGF6t0IDaZHX+0HuAwmmO/z1cqwFdUekvX49rIwGR
3vS0Jg3gl/V55C5GQFHu1oMPezTgdPnIrm+RLpIbcfZ5s6IBfFrjb0p8DdHw
Dj8DtqsBxRZMxY+SjVAS10T5x0OaUPg9L4Cq6BSasPFZ72HTBL+mkG8Nn0xQ
+gWJB7a8mlCs+KDJs/M00sqc0xoV1YQzLhwCx71MUXZvUMK8qiZ4aQ0GGFqb
Id1lBYkw7QP83l/Vqs0MLR9b/bJloAnOm6cDO5XPoFMmEay09ppQev7kbDCl
OdoMUK9NddeEeyd7JKzdzNHT5F0H1gBNqKXLGOB+a47I2mILBC4fYPXcD+3O
Fuj5bwKp5JombOH2cyNKLJAdNfWcbKomzMrvqKTPWyAa4U+3ajI14UcpKW5D
0hJVEZIUNXM14WFR1XamhyVydTvV/75IEz59oam0zLJEjLGMlwwrNKH+vyB9
3g+WqD63m+e/N5pA45BINfrHEvk0ZDRbN2nCkYzhr9forRDrsIXXSJsmBKby
2JCJWKHmbTY6z56D+uFeDwPeCp07Mfh89rsmqM1Sh+NJVohb7YFZyC9NmP7N
+nfstBVqs3Zc3ZjVBLuhzp/SZlbo/Hnee9ErmuA6W1vGdsoKCd4d06De1QQt
RpXETLBC3a+ejKYc0oLuHaXwEhkrdLnHM56ZUQt+sfqZG7NZIYklUbH7bFqw
UbnRH7tuifqP/mnn49UCqZS8O6QeSxQvU3auSFQLbOltNwqeWiJ547PMMnJa
0OzgY5oTZolG/OVeV6lqgWrEwiclDUuUnLRsp66tBQUWswGRuxZItaRqr8lA
CyCvVDj8jQWabD3/mHRGCz6Xv65VCLRAGVOqel12WpCPV25v4rJA2KHtGUt3
LYj6XvVV4YM5mhN8d/OHvxYknAmRzPYyR/d0ouXdw7SgqIdt+dDB++u5an+d
idIC/TtjPBn3zqD8Rx+5129qwe0AnlCvajOU4yDVb5mpBdL7denSmmYo+8Tt
9KpHWpDz49vQi0ZTlJrpQh1SrgVPOkSFn/mdRpGp2wtz3VrgUaZuFvvFEIWf
cis1GtSCJXK6/upbBiiIrs2jdEwLOpf4Ka8akJBXQuag97IW/FsdIJMt1EVn
rsi/H2fGINH/yvZpakDGGtmXtbkxOHHxwdXgk5qItLWnkieEQWBRePgxQTzS
Ot9R5qiEQY57299vR3FI8qx35oAVBkuKBg1vOHgQldND3857GDCQ5wuG2yvA
PheVkPRjDG4y/1TouacEW4N+I8mlGAgFlSWUflWFRUtVc4N6DL6fabSQ1sHg
h3GvxocfGEimiR3L/KML/fT4dYFJDEp+r9fTh+pDT1teZew8Buw5ZpFP10jw
SfesCLaHAc0T07SkeSP4/oiKdvgoQCurPYmq1RQGdlU8GVgAeCaqgzuDzeCr
g3+zOgfAo5RBmUscZ6D7RE/UfT6AgPsCNa9szKEz4tD3NiEA9U6TquElc2gf
UFXZFAN4GlDRLpJgAS2ZuUvW8gDRW/2czrmW8GG1xyRRCWCoZadvVdAKmiyo
y2rUAOzaTn3ZemwFb5kCvVh1AC7Ju5Ce37KGuuC890Q9gDGW12eO7FrDm+5e
vjBDgNKh+SbwsIFXqfihnjMA4bRbX7J4bcHtAeOhOiuAjNovVbRnbYGpeFwm
3w7AgrWt/FmNLTRV1dhcdwLY7Zur9d20haCmpLhzbgB3aHuFpJXtgLfTqczK
C+CLo2LuWIAddH5X+KbpB0CfzaEe9tAOLv+mJhM+C+Ad8DG0t9UOpFa+izOE
ALDT6CsuzNrBEFm5+b9wAOWMV/1vDttD0pGrl79HAHwTY1YV5LcHtRPWRU2X
AX5ULRULKNjDtIjkf8WxAEyG2WTPNewPdM7+1q1rAGKFc/drwR70oFfowg0A
paRVB20te1g9VWTidBPAvpfijZaSPRTYXrqomw7QxHqx7LmwPZh7nX4sdfeg
vgOqHclH7YEiVLCD+R6AdUi1xsCyHVRGr69u5QDgyrPe3O6yA5eUdt7xPICU
G4zpqNAOjt7LNWgrAHiu/eaFW7gdNBSGhlYUA9CRJDKitewg8KX+w6yyg3pf
ZrPgIbcD7kau1isVAPe8jhTqv7OF9vaFRc8qAFea4Y5DobYQOfD+hPEbADfF
lBIPAVsQn8wi4t4CcKkuPw9ut4GBJf+zXAggZuTPT/WzNpC4h2VTfABwGRT5
1ktnA8r0LM0zrQCoM7vaKN8a7gi9ZX3TBVDTTB8h+dYKCPJpWG4vAH9bkVkj
WMGypodvQj+A83T/SlKjJZhaM7yz+AmweQO/LF9mAQxJDh5LfwE4Xy2uzhDP
QH2mXOrAMkCWmfo7h0dm4PeE6k3jGsBDqX9fdpZN4dPbMvrUvQM+W5dYvOQ+
DfELOy8lGLVBSYjMo0zQABR3un8cZ9KGZ5Ol1Vvp+jBOW0i9yaoNp3eOLyhs
6gIIGNu1ntSGe1npVj2vdGDH4iG5h7Q2bEsftcr5pAJhdZqmD09pg//9kA+K
Bcyo2q6VYtD04LzHl0pSMz9a2zKtZrHUhnaP2+Ma1eIoQt3jRMrBHrJYgh/A
vuDQlbdJE5FntWF3/MehbyQd1OjAklUTog16k4ePP8cTEdnuQ4Pl89pgXB7j
WCV2oNc1K1/4RmtDFf+PLrZ1A5TY0H/RJk0buLZuBw88NUWfnFwl79zRBhsp
vpst180Q3f6f4a5sbbg1437+odcZlILt6ejnawPZ/Zc0OywW6MvPxNW4Qm2o
v+zoQT5pgRhjjhc3lGjDxGtK3tlyS5SGhI4ov9SGFTHSZKiSNfrP5UVjcI02
aK/VWN5fsEZM5Kohz+u0YW84g6nqiQ26q23UL/ReG175teFHN2zRt7G+Gy6t
2qBfZkqTcM8OccQ5aeS0a0Pi4SQqPUV7dL85OJ+5Txs0c+7om5g5oCG3bfPT
A9pgafadVvWrA+KmvEad/EMbcC5cx6LNHJHjE8ballFtGG9r2tv46IgeEbL9
KSa1odY1Mv6yghP6+YufR2tGG5oi7gVMZTohvvhn3RHz2hDNv1x69J8TchNS
ulq9pA3qn7h8+vWc0ZMPDUpLq9rQpiZwhCfDGU14kKaltrSBxJpj0tLnjEQO
9dz32dOGfPKMB3Y0Lsi70N64gEIHnFOzOWZ4XVCx7uT+T2oduHxL+DolzgXN
TJ59yUWvA8L32hnyCC5IImHDw/qoDjRyDx+qMXFB/iJx7LeZdeDwFDWzlqUL
Kmuh/9zJrgOhmRnsCtYuaN7rbhQdtw5U/DytedPCBcnQ8Mrq8enAKyvBdSNj
FxRUVDwWK3Tg/z81ygBtF1Spr3DnnZgOuNv9DJiTc0HLv+v1NqV0QH504+YX
LheEu667iZPXAc0R3mPHKVxQuFjXsyClg3heNXwPbXVGNZ9snMrUdKD2lOBY
dqwzWvcZPzatedDA99765Sg4I9XDAe8FdXRAiPDydMp3JxRRshrurKcDPVZR
NBERTqjOIFrsgaEOnFd//DT8qBPanqEd+maiA4fIXw1l5TgijaSMm0zmOvD+
UvTsOp8javxcuHzDXgfWg5difx51QC85uoMvO+tASv+Tif54e1TgtbUY5K4D
u9zER1nLdiiJ4vSCtb8O1Azf4px6Y4uiTCPOGp3TgbeVNRvVx23RuUdP5rVC
dYBepsWhy90GWeA3ZoUv6UDY1aCCsBUrpH9dwJ8zWgeuhPb2nVa0Qvhvp/4w
XD2I5/ouE3OAJeINyZ/+l6QDHJJNhRQd5uhPieFk030dGHSN8a8yNEU/1sM8
qh/pgD4l1+pEvQnq0s39VfxYByLCLKcJg6dQ1di/sVulOtC8sbLos0VC0ZwP
RxzrdCBPMPAlwy9ALDcW+jcHdYB7F/uZ6DWGUfdzWs8P68CljxlNTk3MsClE
/DY6pgNzFcb7M+UCMIKy+1pndMBR0e++iYQClGxo/3d3UwcyJXqt0ka0IUcv
wPTGrg40+NQqjtETIfVOZlcUOQG6R5VL2JX1IExu9ov7YQJsgao4XbQhaPnc
+SzPSQBR9ktT2wd6WL6mwUD4JAFuX72n+SrgDAhRzXzi4CcAWQh7R72/ORzO
02zdFyMA04d+tTpHS+jrn3r/RZUAS7JCKmfpbKFF+DihSYMAF2G7rmzaFmpD
1ZurgADmXXcl9Jvs4NHRNPSARABDwmRIiYsD+OqrvfO1IQCeOZSL/4wz/BXj
/FjpQIDnHTO6mYdcIIRus2PT5UCn6cfkdDu6wPrsQJ+2JwHeChoYPa50gagv
b37c8CWAxchRtQUyVyAvz574L5AAFb8743KMXCEh7eIcZwgBkvZS4tPSXSHN
XHWnJJIAdS6qqXOMbsCqxEG1fIUAumUxfaJ6bnCfbYMef/XgPucOJ9OLbsCz
0c8cl0gAuleWmuaFbvBk8DXX52QCSMyozfN8cQOx+ixBpjQC8PW2Oz1ZcIOy
nAuSdncIENEbvf0fgzvIX7FWfJxNABv9c88eCrlDjbOK+p8cAri4BX/fUnYH
dW12gkI+Ab4Vtkb9JLgDElg3jCwkQKuqAzPByB2IVP1nmksIEJ2QVs5j7A5t
kzV2dC8IEFR0fy3AwB1MWjPdzrwkQJdqkJAEuENP8Xm/+zUE0PfWZLSQdwfr
JKuQ8ToC7B/3FvrD7Q4//JUjJRoJkMrAHjZP4Q6uxmxxIe8J8L7IrNjllxtM
yazdqGslwJX223SkBjfwO/YtnaKDAOtHNuNKbrvBwlL1PcNuAnBaz2SluLtB
WO/d/Iw+Ang0GwduSbvBRlV4yfcBArjdPvV+d9kVKC4q1fqNHfhz2v23HuAK
ibasTS8nCZCbK2XIIOAKDOqrn7ZmCJBfzsW09J8LsO5VDSQtE+D3TQfxiwIu
cP/nndGeNQIwhsp2X09wBp6msOkT2wf8uVM55NvgBGLxuI1SSiIkXynU6zzu
CM89Wcj+0RBhf+iy+jtpB1DQX6FRZyCCG9PvzvaDfUuDroq9nYUIQUO6jZrG
tnA6TVFlVpgIXbQaa03UB3wOZsYUJYhg+fWm9O9xc7Ax/6d3SYYId4IqnOze
nAE3tldW9CpEyLYVqj1ragrncxTOS5KIYLsyOal2WQ9yiuWr/f2I0F03pV7Y
toF9GnT/lHuWCPLMP3aOhB1FK3SZQ70hRHDsMaJh+y6AjAK3yDUuEYGT9laj
2Vkc2pJ/b8KQQgTzZ9+Mz0rqIhH31QPSEuHr7fG7pmP66Mwd0fCwO0Ro4aT8
8TnDEJWuJT/4kUME76wjrZGTp5FtvcV02XMiBEY9GLU4caD/5hK2RyuJ8PE1
XQirrRWqOFnLyFpDhDGBRYanGdaINuak0uUGIhyeO7L1ecUW4SpPkyqbiVD9
4JBNGbc9chmPtZ9sIUJrDR39hqYDekOcijXuIkJUEtXORX8nNBHOcTe2lwid
x7fe0VxwRseKDIur+4kwkcpDY6d5MA8Pl3eeHCXCIlnrzUycK8rAj42ZTRCh
5lpPaGWJK2rwZ169Nk2EYNShRzzhhtg6L3D9XSQCj/SDE/rzbkhnv0RGYJUI
Jc9/9Iaddkdn5X5oW20SYd7Ddv9umTu678pombRLhM+Xc5+lUHmglgzwaSDX
hcvN3zANaw+0/D7k0vIhXXhl1xV/o8AD8awWpIrQ6QJVfdVzuzkPZCjSn2/H
qAv8R9xcsmQ8Ubj14epUJl0wDLJ8J+bvifKuq39qZtOFM8mY92a+J+qoDRxa
O6ELTymkk1Z7PNHGn9y/Ery6EBqjP06354mEuHvInQV1IZJDqllM0AuZGlOx
3hbVhYq5Pg7Q8UJRV5TFWiV1wYWV5QLB3gsVl/uob8vqwvDcQxbRs16ob/S+
iSxOF/Z38vpGI70QGdMXV3dVXQiYnTHwifVCUoT9sCwNXdgbTa+rOcA2YfLX
20EXrtAqC7Ze8kJXC90f7BN1ATdWo5Z5zgu9+Hb3haKBLsTqXDkn4OiFvtN8
avI21gXeo0b//IleiFptq++BmS7wvIl9GSbshRT8pKa7LHXB9T8yOyDzQk4P
nLYp7XRBhjvCqq/PEyV1pDGqOumCSSqpT+WJJ6rZbeYPcDvIZ7+/IfSgXuMy
q7g8L134j3SpMUPaEzG6iJL6/HThX2uvev6MB8Kn29rTntMFbstq8+e5Hij9
37vYoAu6EKZo6rO/efC+PWmuDpd04bHClt27And0qtJdmxStC8zWNsLRhu6I
+txhcr7Eg/oe5yTYJLqhCeMfo/TJusC3fLg8i8cNNUmVo/VUXcj1GeCSrHRF
UX8sYroydYHh3x+/Z59ckG2bqEv9fV34aCe73HawLykXb2FFjw74UjsRij10
RkueeftXnupCO/d0eFOiI/Iam70iU3Nw/rHJPiWZLSKiBqcTdbpw26ySUbXD
GvHnpmtRN+gCl+GmUle6FfrhoLI3/FEXYrpxj3TpLJDZQNzlm18P+PTEQ+VY
sDHS6OKMmlvRhdZ+3ePRCRKI88Wc/cCGLty3eVb/7cpJtJbSqP5h54BfXXoD
027rjZWGntsPqPTgF0PJqkOPEIi0VEQasegB84V7vmkc2nD8nX5EqaIefKOo
Nf8tZgF/H5ywzVTRg6NKhy27Ui2hI3JeNU5dDyafbDyIWbSCBNXbG7YEPYhz
Jf0YLrSFnVcjFw6b64GfaO+ZY11OMJhRab1qpQdv0u19J6lcoCY4XmXMTg8+
7ng29D5ygWBZifU3bnpA0+cx/bHVFaZKw8/7hOgB2dK3jz9m3MHq5N5I8Xk9
GKKz29wO9oCPtxL0ZyL1YK6v6Wn1igcUhGVx+F3Vg8XBhQWLGU9g+c0bW5qo
B3f4c6Pn7Lzgqm3xzJ9kPSB4XLsR1+IFblq1df539MBoVlCbN9kbeiq0Bcuy
9aBtF1VO/PIGbcHPyXM5epDLfUlFRNkHKu6eWZHK14OHdz8mtcb6AB/tkENg
oR68v/Fd/kWLD6RFun98XqIH6i/ybzRR+cL+3Kz03+d6wC3C3vlH3RfOOodl
yrzUA50XsgKsAb4w8t/O3tkaPZi4oJIlfdcXTIjXvMvr9KBasURR8LUvvKs5
0r3QcID/RW5O/ecLUuKZqnLv9UCwYmTWf9IXch7w5Ae16sEJtzCWoiVfYGAs
OlzZrgf3OmcTb635wqUY2ZClLj04TGTx41nxhT/Lr7/L9+mBbLXNkskfX7Dz
BELIgB4Ef3zqyzPoC5/7Pz17+UMPHsc3KqcgX1AzNGP5N6oH402LX+/l+ULx
28EoxUk90KNV/mkY4Qscsm6ToTN6wHUVHSo09IXE/D/GVfN6UKwwyV7B4gtr
zKE1K0t6EH8oeC+83we8ErZ5lNb0oDfLrZ7itg983biaGL6lB9nxh3089H2A
6M+wWL2nB2auyQrPVryhaviOzRqFPpCVdtrN3PcGQdOTTco0+tDL2CGjiPeG
jOZC8Qv0+iCI9Khze7yAQkkm4/VRfXgZP6ep6+EFwUU1W+vM+tB6a0QeFjzB
NKW1/SK3PnSOX88qWvIAtHcaV8t3YJ/hde2MrwfIBg/kbArpg3zHCEfXd3dg
tJoJjJTWB8rikK7OZ27QwUt/LEpLH3okJpv06VxAI+P2xbc6+rDSS/PwSYkT
PKPiHtvR04eNve6v2zhHSJqRenn59IH9gmohtZwdkF6ZWES76AOLtORl6vfm
8EEvIzsuTh8qWitmiZQqMOlV/yUyQR+oPdOvxODkgDpxgiI0SR90yL0eadcJ
AKlVOdA9Qx8UVtT/rWccRx36Q9rEx/rwZNvL+BMFoF6S0OyhZn1QZzikKnnL
Eq34GPPtfdSH5v57qRYK1gd64LzlWps+/AuavvC92wZZtX1qnPpPH1bDzh+1
2rNH3w0C77SO6cP0yrdHP2lc0bZvZlvjpD6ITGlYaTa5Iu6kxr3XMwf1qebc
fXneDTl9Pu5bvKQPSUM5v8W+uqNxwxrNG+QkMH5Y5ad/MH8o/X+GxB4iwc+f
61rei15IKJm2OOIwCQwPffbTivFGXu12TH7HScDi8ij3wi0flDh7Vd+NlQRy
dDc0bjH6omL651F2nAf2DlsBbYm+6I/R/pQhPwk+ldwN4PXxQ/QBYtwEYRKk
2S3XbHf6IakUMzN1cRKUNQ/nXJL1R8ZlkQmK0iQoPCfKcPWGPzrb8aReUp4E
TRc2I9d/+KNbcx2LgkokkAkMWmgUD0AVDGvC3GqkA773UX88F4D+k+K1Z9Ek
QWt66M7iiwC0fIqUxqBNAr1RlgrZ3wGIOTD4I5UuCaYCjpSd5QhEuJv3t3ZI
JOC0/yPxUCcQWT5/L7t6igSO5NXcZZ6B6PyXOY95UxLMn/oimRobiLLmWe9P
WpBAA2ybVDID0ZsjWNewDQmipEiHc58EokFpH6pvDiS46jK9Wl8SiLaM09U6
XUiQz89IuF4ciLjO1p1t8SCB9cjni/u5gUgj9deTBh8S3C18Nc+TFogcXzAM
1gSQgPlwzafJi4HoSqcSY3kQCQbKIiks7QJR7l8nQlHYQT7jFl7ncIEIMV6/
mHuRBGxtDRlqNIFoVKbyeVbUQTw3XTdrewIQ+env47diSFBxvmRkIzMAfWqw
FAyLJ8Gz5Zf1bpYBKE3mP3eb6yTgtuNTmWYIQDaPThVopJBgQZBeNvOdP+Jj
/DTBl0aC3dMMkpe8/dH0ZYLwoTsk8Nb6z7aIzh9VzDd4zmSR4NJPg1SpIj8E
X6qnKnNJUN9XFp7e4YtoNeVFM5+QYCapayLH0hd1l5V5RxaRIKuorM1mwAe5
pDyZ1iknQUJRV6NhuzeKMUr/09tAgrwexGLo54lI9QySb5pJsKQv8Z7sgwc6
JnndP6eFBGrdzkYuHB4ojy56zqPzgF87+JOVlW4ItQX8XR0mgem+RfxhK2dE
RiIts+8evPeb/j7LRjP06fV7hR0yA/io+5Th/uhplCaKhY5SGcB7qjj9atVT
iI9GeaWYwQB66GdHv3USEbQIrqlxGwBpB9dMKBNBMcT9TXt1A1jfJhxyYDn4
vyoSD5gBkD1LuPZh8hQcE1qLFCIYAK1hy5ClrSnkUc5vzxkagKhCkmDRSQtA
zd93L9sZgN+++k+4YA/XFay03JwMQODp0RpNbUcwffzfFT03A4ikEr3tesgZ
RmM/7TP6GUDMefHb8pquQKZdQ54XYQBdvW5Lb695gB3x9+eBywZAlVbJLOLk
CVX6HHeOxxlAsvnVXWF5L/AxiRS5+r8KrDwe6q8LixSFilCSkEShLElUTkQY
xuwztrLv+74bY19TaZMtSZIK2bduEiVUZInIFqKQ8COq9/v+OR/ne+5znvOc
e58jUR+KNzdt+vnKAZqIj+brUvVBJSHmiHacI+a7PlcvXdWHZqaJmbqWE3ww
O4uzv4PxoznrdDLfGeQueezOydGHD/aHrD4YuECsde5Q3z3sfJm1Z2ozLqDu
xO6pX4zll82ef8TvBumuyqdYJfowpkPlNLvjBnMetux15fqQf1Xox35Rd8jz
b0mXa9CHZ19aLU9zesBG0H8Wdi/04QIUrODcPIAWJnM4+5U+5p9uJ/a1e0AJ
02Sh940+nH7/3fbLLk/YFp1Ys6NTH+wd9D//VPME27g6ll6XPvBoz1hcN/OE
xsTvuMhefbh8zYPYEOQJe1L3C9YO6IOB3gT94jVP8LmCH14c1odDR+uM3Qs9
oTM94sHRcX14YeLHmKj2BJlbJZ62U/pQObTQU93sCaw7o6eyZvUh6PRFn69v
PeFzNj9H77w+mC4MHrLr9ATVPO12viV9aP9YqaDS7glp932vX1jVh0+F+P2E
V54wU3j/InNDH6wmst5X1XjC+eLewzVsBiClahvo8tATsp9u/flzswEkiPy6
7pruCatlarVHuA3ASDBzoyHYE0iVTlE2vAZgqYQ+2Jh7QnFNhmHmLgMYSGYm
25zyhC0NbwV7BA3Au2LH8kuMH0u0McwrYgAXPl24IPLWA2pfyhfqihnAQvju
v2lOHiDYetErQtIAnK0q/Db9cwfPtsvq1dIGkGt/pygqyR3aOhDHzyMGUFhk
L6u0wx3CP0resFY2gH1LqROJG67Q30e+dOekAbAdOdPtb+8KSoPRMh81DMAu
8ZQV/2sXmBydrNU5bwCh1h1ZK97OAF+Fo8P1DGBDn980vd4JMqb1jKoMDeDm
R9n6pL+OgJ8v+iJDNYCcnY7lBq4OULXhvpnH3gBSsrR1Py3ZAD9bbsd5ZwNo
NHzVxLHVBlw5PtwIczeAzaeNls8LWIP4NmXZeX8DqDhVN8e3zxLihf8z6orD
+CIHRLgP0yH99evxpiQDeJur6cjop0JOUEbQs8sGoNkNtQ1vyVA5eOZ++k0D
iCbGU/vPGcPXnOgN2gMD8Hu0eP807jRoyfA/GmwxgG0avjorc+cR/tM4tLcZ
wGnBzh1RRH1kkljRW99pAD9f314JKTFCnt8Z7Nm9BnBLMG3w2TEyyinJMbGc
NICox+QH+aVmaENNnusrJw6s/2QXWrfYIa6Zv1k93Di4s7/1rFapPRK48165
hRcHople1w7ddEBH/vhceiCIgwnta6s8ZCek+kRn+eZeHPDOpJRkyzgjrUvC
SfH7ccBqML1mvOqMTF7UVjodwgHt/mUZtRhXZOudbGgqi4M9IiGrW7H3zfPg
xTEDeSzfDg39w6tuKD5mE5/cCRy84ZBlv27sgdJVu++JnsKBkCbX47gFD5Qz
lX+K9wwOtrxQ0ODW8USV+np2c+dxoAVOpYe6PVHT773rw3o4qEq7W03d7YU6
Hs2mvTPEwTajpeYoohfqN2+QRgQchLoUZGcneqEJ3sv1JRQc+EnFsN947oUW
Gi1Jdxk4oFBcCkwXvNCGh9L0FXMchCcnnxkW9UZcEpvDWZY4WMqPDhXQ8UYC
XT0CPrY42PrkyP45R28kFvXgoY0jDiSOS49Zx3ujIypBmhRXHMRU6GQ43PNG
ql8Nes574sD44fWDv2q8kdYNUZcTvjj4cl/V/c9bb4S/MMcmHYiDNbPF8IhP
3shk9fkNoVAc3MClevmMeSPbh1fktjJxQLg5GPxx0ht5mto0/ReFAz5c1Ew2
9psvZ2bkdDwODtQ+i1Ae9UbF417/IpNxsPPQw5hLvd7IQGZtf2saDrbPVdZK
tnijKVfmaZ7rOEjJ7nAKL/FG0aVbzYi3cbB7ZKeL33VvJLmSGnQjCwc7atYP
8vh5I6QudGvwLg6qG/jj9Iy90cWIrErxAhwYckoJKEl5o42XUj12RVh/enZ3
ffjlhTK4in8VPcH44j9DV2r0QmpGyvwLZTgoe0ZouBTlhXqu1B4/UYUD9YC+
ew7aXsi795xxcB0OLjkpy5n89UQ7971xe/4cB4x61ZXz5Z7IML+vSP81hidA
4hh1lyeamb74JrUdB8y4XdbnvTxQvPzkVPd7HOgrBEj4Vbqjl5VLUhc/4aDA
uOGc+SE3ZLkeon1vCAf+LaWKwcau6K8mh/X0KA6EF7aO/vF0QepvduV4z+BA
uWn6iuQdJ9TPe7uhag4Hr08YTGrmOyJ/kvjnjUUcdP4Qj6i774BKBxX2xq3j
4JvjeeuRq3ZIZg537Q6PISxJK58Z2W+FWpS6S0d2GsIbdiZH/fglZBtg+v6Q
oCHEWzw6JR9pgXLYnHhL9huC6hb79d05DCQkEBvXrGAIdpvNB88vGaLNaijk
B8EQRgRpffot6pAXeiFDiWoIrXtLMsl1WgAvOqsDTAyBu2b7hBXmg0MMhpY3
WRvC7uipsHAGERbNf3sI+RgCrTq6vOKNGYxGqthqXjeEvQob32zuO4C0EF+q
521DIF/JfJ6NHMG5aKrqbpYhbMutHH3S4wRLXRnbNxcYwruqzrs7v7vAKQff
EyeKDEGhT/tQ63dXCF83umT/BMsfOvtddNINuKQ2PXtdaQiTJg/+Rb3wAKPq
gc9rtYaw8ZMnJZroCVcNy7ccfW4I3wJ1crc1esI+PwfTlFZDSL1CnB5J8AJL
7nPRjW8NQeDs2xe/pr0gP0vkyfw7Q+AaHwg11vYGhZaOTaR+Q3C4n6Xh+80b
fEwfHI36bAhJL2RfcZ/wgeo5JrV8xBDcG8pxkSE+sMEyjfg6geFN7HZsrveB
c8IqD4W+GUKT89iexlUfiH3E233hhyHwdee+MD3mC22aUxuBPw3BQNRNLd7S
F3Z8RNJFy4bQIir2+kSyL1AcMwiDa4aQ8DZQlVLmC7c3fIJ5/mLxKvCmp8sX
htOM8s+wG8HdvcMGT374guShw53uW4xAEeXxdbP7gUMN22rONiOICMpYUuf3
g2KjAYkPfEZgdvc/1+F9frAw+gzHLmAEb4Z3hFQd8IMT/il+ysJGUHt9turF
fj8I3uaQY7vPCGKv21N+C/rB82x4c/2AEXyXHxWx5PKDzcoiv1oOGsHYItPz
15Ivtu/9El09bASnbrDRKgd9IcWsQ1dWzgh4LPgci+t9oWu+wNP0uBFc6lX7
MnDTF4SimRlJKkbAe9Ppsp6bL5jtMW2uVzOCA19+TP457Qu5xcpzP04bQbgc
74/NW33hK/DuOXDOCJyH5MHprQ8c6Zk8R9AxAmnpeAG1RB/wcEIukfpGsLPe
QY6p7QPlf25fLzMyArvqjWHif96wdsXn+TjRCFQo9due3/eGs9JG33bTjGD4
LEloEO8NrXi2MwEXjaDIw2bB94oX8Ix/si+0NoLycw2cEke9gBDwLO2TPRa/
90pY/3NPGMixn9DwMIJD9ZHfH1V4wNxCexIb0whsdMW/Zpa7gHJMQYVitBEc
S3C6tT/HGQL3Mr9YxxuBYYsvV3GkE2zSUlZ+lWYEHZThXfuPO8Dua7cHEu4a
gUsqX8p/6tawrUfgg/d9I8CLyidt5cT8r3Bqq9lDI3AfGkpH6ZfgRwarXL7U
CP7MPlOVTDOFljyX1A/ICPK3rKs5HCNAYNkZrb0jRuD7Ny+G6+YJ5L5UpcY+
YQR9AXe+3NMEZKuqdGx2ygjOXj8cVlumg4i10qIN80ZACkw/qadHQEeadqxY
/jOCD0+Wf0twmKGhD6MPC8XwkGyt/PHkEwf0UcA894okHgRMmF60EUfURu29
ESyNB4ttPpNivM6o8lNblKECHg7S3NiisH2reJ9O8AklPIR7bk9O9nRD9yye
e4qp4sG3b2hkX4w7Sht9ZrFwBg8Jea8sBg09UexBBcqnc3jQGvtbldXuiULt
Cg2adPBQ3G6jmqnnhZy+ZZ5MN8JjOldtf6fijSyPCiuEEfHAf+u0wut8b0Rz
uyJlT8VD6sH9JlE7fZDWz5hdahZ4uE6pX+ka8EFqymxcElZ4ODm3+ZLSKV+k
4Bf8l9sODyNtmxJmrvoiqaqlpUVHPAy9mUsen/JF+9bcZwdd8WBTbZWxRc0P
8Wt8G232xMOn15S/Z6L8EFeYTf9jXzz8DZuX8Xvjh/42DnXeCMTD5SieZ7e2
+aMlNsariFA8OP0Jtrmh649mtLrqHJl4ODa1pmwR5o9Gog3LiNF4OCv/nTr0
xB/1trQUqsfjYV2tWZVr0B91cJ3LOZiMh8N1h6LfbwpAzQZ113nS8DB+uf7Y
kYMBqDb5RPLyNTxsLWr13qYZgEo6n7KGb+KhbDP9gwM1ABXsPBLUegcPPMUa
+9XtA5DCpMnq5lw8vPk0f0bOOwBV1SUEaOXjYbk43yMxIADBlZqViEKsnknd
RGP/APTa/ptfQzEexjgfaga6ByDC6b3Lv0vw8LQnYD+HZQD6tEvfV60CD+3h
D1MXDAKQ9VTgL78ajL9L9p+1jgWgmfpC72cNeCg97KLwlycAeV/t/7nwAg9X
3ownykz4o3UHLi+FFjzc4Hne86bcH0WfUVtwacPDk8zgd7Ph/ohHwNHjYSce
pIocBDK0/FH69M25yS48nME5Co7980Oija1uUn14EPp96EB3pR+SdzrsmvMF
D981/sav7PJDlWfps5/HMXz1X+MJlb7o7O44Z5FpPOA3z7bkUXwR/vmk4/UF
POxzNbt7NcIH9aYLTXct4aFu6OWAHY8PuuSs67BzDQ8GBv/CM69hfkiwwC5p
kzE0cyemlV7xQqszPROvOY2BzX/hZReXF4pEnLZbthmDVPWpoc/Bnuiqi511
JL8x3PKTsY7OdUflL6QuBRw0hjPC/5hhCU7o9E3KcPlhY0AkpChwzBG9co22
WDxqDKtB3n6iHfaoV3jCzE3FGBZXpYq2Ldmg/9zuMWx0sPMcP78oWDBD6iKS
JGMHY7hpwjI4FXMQNc0TPyS7GIO1fSz5dvA2wL2KJLR5GAPPxjFXW4fjYO45
itcJNIZdmZW/bhnpQHhLLk4jwRhIXiMjrCI6vPA+oHP4kTHIJL3EfdZxhN/L
82miT40h2Hbh5u18J1AJQp93PTMG53j1gLo/zlAYYeW7UWsMdhY5s++y3CAt
+d69D23GcPsU9P3V8YK2Hb7zLZ3G8EiINGA44AWbr53XqO8yhk78b70oZ28I
vP21q2DAGL454JJ2h/uAZcFh9tAZY3j7O3xqzs0PMmRXjbzmjAFveFMzd8gP
Pha/vm2/aAxE1lLoUT1/4Dt++6vZClbvh4ZJn8f+oPfMSZH42xjWlzdtusgb
ACxV9TDdv8YwpC+c/s4hAIbNYyb2byKA7p2nz57WB8CeEepxAU4CCP7DxV+k
BkKFxNle3q0EUGsf3sN+OxBINtKhXNwEcH69Za2hNxDm8/kkObYToPF9yG4m
XxAkT660/uEhgJGFZMtJCAJZmS9uq3wEaPjY/7nHJQhanFoFfu0kwLs7szmG
V4LA+tHTmh/8WHymQvflkiD49/3mpendBPDbXVeb/iYIMhWYnONCBBC7ThAj
fQ4CNU/HR0N7CCAgzzBE00HQU0og9osQoP9jvOinuSDw/qX2X5coARZ05BZv
Yr93nJDI6hAjAC+To3FtKgiK/bm1X4sTIIDa9m9jIAj0q39ON0li33uYtN5t
DYLJtU+pDVIECKPZV3x7HARRGk0q1dIEaBUaXe9LCQLxsKKBMhkCsOvNW3g5
BEFD41Xm4yMEyNSIPlavHgSmbCHShXIEsNS+QUFbg+C/czbteQoEuLbjp2Zc
ZyCkR+G8s44TsP3q/s99lwNB8ZXynltKBPCgCC4n6gdC5xbRxqsqBCg2zb04
9icAXPQ226aoYnxlzbxWLA4ArsTv3PFqBIhZbCYmUgJAi7eBGnYawyfBX5p3
zR++4O+vB5zF+vNtWDH5iD+EpqXc9QYCdD0S299V5weVAhd/OJwnwKj7Htve
Dl8gU3WvWesSYE36Vv8bvC8s3FA4ZaFHAFE7q6GoNsxfiPyLJhkSQLqJ+qS5
zBuyxXNFz1AIcLMqemmngSfwJSq+lqcRQLyvXPQQwQMifjX5iDEIoJhDV5Db
7A6WLV/b/pkRYNuhU8LeVBeQdD0a1GRDAFOZH19D7ttBQVVlzwUfAiTwWd0f
TiKBkIRepJofAQYLn4vfvYeHuMRPcrIBBLDzs/qseUgPHC02oraFYO/6Rxez
sAOqcIRDS6mDRYCmmwOtUQVn0RN8RyrpKgHwW9/sMZyyRGLVF9W10wmgn6F2
XizCGl2WWPiqfIMAEk0Se8kCtsgTW5QEMzD93/+nZHXMASllMGb77mJ8+C1B
wVE3lMcxc+P1PQLI+RiUi2e6IwG3EK2a+wQ4cORX11YOT7SkmX074yEWP0Ah
+ll7ocqv4xcsSrHzlvmT8hd9kLSx3y+jZwRwe1RwgjvZF92s3pJztoIAGgdv
CQ6J+6HAJNmVAzUEqBPjSTx72h9NL9Xe3VlHgLGxhs7oJn9kctHQaFMDAQb8
OOoeaQcgdUWP/DFEgBcr1433qgaiogw2QncTAXaGn+iVeBCI9m2+uv6ymQBO
Yp/ep/IHoWS3gw/KWwjwtdXG6HxgENroLSfdf43lf+xVcLg/CLmC7t/rbQTg
oJxNPKAUjD4/7HsY206AGrczm3bHBiNDASdqQCemr2Fb37nuYNQQ+pvN8T3W
D3XpZ7f3haCVp5MLrC4CVInLEPSsQ9Dx8a6RrI8EyPv36QTzbghyFnr+vrqX
AN6XfgjJfQpB+fqPUHc/ASSdq8rVuEPRcOjNkrkBAnRsvvY1XTEUCZdE5XIP
YfOdUZqhSApFhHGPNKkvBFB+wvi6ySUUJQqZMzVHCXAhLHH9d0goatbX8zQd
x+aFd8/p3TGh6E+oiqXfVwKY6e9TuhAbilRLxAlpUwRwGOi7eTkiFHmO88Cj
bwTwLd1kMusZioqE1o61zBLA5oJjuqlpKBrX/3pg9Aemj17OrC8aoUg07MOO
jXkCXJ33+h0uGIpoJQ3/hBax+jirHDWnQlDa+MN5xSUC5NxN7JMtDUFvhG58
MVzB7i+VaUd9nxDEbsB657BKgKzrfB6P5EPQ6TD356zfBKD5jDhdGglG/iWm
T7M2CHBZopAjICkYPR3Xzan+i+Gx1OTdciwYSRociJhjJwK33wvGxKUgZB62
3YObkwgqQvu67H4Eousl/12U2koE/gUNsZc+gYhL+P1Z0+1EGH9BPpPsEoC0
DOoV/HiJUPi764b6kD8KDSsUS9tBBIMD2c/19fzR/Djz7ysBIhzauvm91HY/
JCPsNjciSISE7I/RWja+yNrAZHhdmAjtQy6pthWYHyhRbFQUJQJeoQe56nmj
+rCxsCwpItTfsT3Wb+GOVko63aqliRB3dF/SRrUrOjZRa9EtQ4RrsuMLjO0u
KM/g2hlueSI4mX/KiL/pgOKFz//xPUEEz+NnWn6aWqImg+M/Lp8kgtbhXNbY
mjlaDxMdKjpFhEH2ChK7iglyn1iqHzlDhK7sX6xXqUREKb0faqhLBN0rl2o8
Gw4gCdzWjYN0IhToUvdqmFqASo92l4gJEe5J/+s8EWQJupeYhbvMiMClnpJ3
UMsanH3WKP8uEoGsj19Ar+2g/M7s4wF7IjwBjoilTFdoOSQT/cER4zM707ZQ
2x36n9qavnYmgtKl78pvxz3gz8uhLZXuWHwHD8Myzgt0v7+7dMWfCPSDz+zO
sHyB4c+jGh9IBIE5ubO9J/zAmU2fJyIYw9OetJIz4QeXdzdVu4YT4cOuJg9B
5QDIy/6basMkQpLTpxcuXQFQLqNhZ8rC8nXxyem5BkL/6fJderFEeLrJb3Y5
NQhmWhamzsYT4ULD5b4Q4WDYIMg3nkjE4jl49/+8HQwSdgXOB1OJsFT3VVAy
OQRU5sdAJI0IV3yCM7PWQ0A36IDwrqtEuJFVrxxvGwrOKbde/r1OhNOeljPq
kmEQKtxze/km1r/+QOl3/mGQeneX5/fbRODUKah1bg6D3KN43fE7ROBIqX71
37ZweFaRKDqQRQSe3u+7rA3CoUWzdfF9DhEW19JEbrLCof8Nx5vWu0TAnq5d
sc/CYYYMOY33iNARWDN2YCgcNoZC/SruE8Holp4G/V848DnW4IofEMFDrC1R
XCQCJBaXJe49JILXdU0ub/kIUAlVWr39iAgBd1fLtU9FgO4Wj860x0QQP4K/
dPlMBDDSHuXHPSWC5PpcPkE9AjCzGxxeSgQJ0Yal6GMREJovRfR7RgQ5DY20
o/sj4LKC1WHXCiK45iQk63BEQF511h/rKiJEn1js6hkNh3KtgW6TGowfKw6J
0WqsvnahIkIdETTNT3G5x2P10cjMCw1EMORU/RFNwOobuUw7+xzr7/64Lcd3
hcMf53a5Ey+IcHznumlIWxjsXObikHtJhBnf6Oe+oWEgGaHzSfIVEV4XFH88
ejgMVLhZT/e2EoHUfZ2jrC0UdK81xux8Q4SBnSnBIg6h4PLgpNLfdiK4hfPX
TyWGQLiiL9dyJxEe/5K4FcIfAml1JcOz74nQyG3dY3wtGMrfySZ9+ojNu5Kl
4pHIIEg7+OL+714iWN9BoR2jgeASwED7PmHzu/vYLwGNQJA8ELdsMUSElxVJ
Sxr9/nDZfeLS2FcioEGnigtNPuDcFBLMMU2EZgdhmfM/vEFXSOC61AwRdDz3
Oofwe8NGw7k2+zki1ArPNCYYeoIzb47K7Ao2PwuG4nt4nEDXStWYZ40IQeZe
4CXgABIVHU7y69i8x0k/MBKwg37zjWyPf0RwT9zq0fbXEnSKTbiXtpLg5ENZ
VqMs1mfc7uGNPSQYH5IXPhxMRBvZj1b37yNBJJs4LaCTivoWtQQ095Mgrqzf
OlfMFKVmeOlFSpDAQ8E6rpVmhda/dZZxHiGBxoU4++5SJ9R7xr5DWo4EL496
T5+rdUFlV/5MXVAggbH+TdlXdW7I8ZTc/kQlEkhmiKcPdnui3viEOD4NElxq
vpJfl+CLyj6L5x07Q4K69bxMurMfSjleXU/QJMGGFeXPBR1/dL5/8udVbRJE
nNokKvUtAB2QC+cp1yGBsMbb6aulgeh3hODhngskKKINW5r7BKHSw+fNhQ1J
EFPhFL9nLBglhwz6q+FJsJZ4g5WZGoIc33lfMSGQQIm7cjhLORSJBdxtuUMh
gUu7BJloH4Z+t6mN1tNIMB2ox3n/VxjqEXu/PsQggdqb7041geEoueXvcXEL
rL4FCjfTKQKB16Ti/ksk2L54sJWvMwIt7etUErEigcPN9y2+gkxU2FKhLGxD
Ak49eY51TSYy98pS2W2H+bbznl9S7Jlop2jMiV0OWL6hbmHJBCZqbnFV5XMi
QcXQKavHD5go0ItycrsLCZJTpFylm5hIXvS0GpcbCa7Ge09F9zPRWMvBU5we
JFi6/Zn1YoaJbnhtV2f3wuqfVPnZs8pEBqK/1P95k+BLrf1MPXsk+tsyoLHh
SwJlG1V5b65IVObVdHrNnwTAQsxF7khkL1p0ZiWQBI6u1RUaWyORSOuVs7+C
ScAhavfAkC0SdXoFaS6EkuCvjfnpQ8tMxBK1gh/hJDgqtGHf8pWJVFv1zs0w
STA7lntIqYuJZryOa02xSCD4OoPlUstE2aJ7tCeiSfB0efiafzYTkVr/aY/G
ksDqQEAwI5yJtnhPnR+OJwG/1hMrYVMmqhV9pzOYSIKh5d9htYpM5NFaqduf
TIJa3wfbDTiZSMo7+0JPKgkUD3hkZD+MQP2isXpdaSTwrtgr8BAiUHKrm/67
q5i++q4KtL0LR+BNNWhPJ0HZkXF5EXo4WhI9g3tzgwTaxzPmnvWGocJWKcOW
WySYKtnZ9wwfhnbuXzJCmSRY3V3QYiWD+afWQXxDNgnqt3y0ICWGoEDvl8a1
uSSoerwmr/A1GI20XiWW55OgNN7zDcRievRWpBYWk6BN+PeQbbA/st+/l3b/
CQkevMHLnij0QyKv2eh5JSTYQwqINX7vi1j73zMyyzG93HPfd3ynDyK9djdP
qyeB/V8jx/0P3dEWH5pFSiMJCkZf2h6qcEW1+89eTEQkkFlY/H6mxhlJ+vBa
RjeTQGRW2Df5kT1a3F9sE9hOgq0qXW0byeboms83Z8vPJHi391WYcNkpENEN
9iIPY/UYdISZROtA3p7tgbojJFhI4UgXU8BDWYNcjNwECcwK7+6zr6XD+62e
OauzJNinSOnStLMFxgBbwewPEiyfzDt4I9weRoqvFA/Pk0De79m8xzVHmCc+
q2n+RQLLhU9ixY9dgS9zpTttnQSZ37d3auC84YZ73EDUHxIUR0PhNk0f2H9u
z6j/PxIoHHCOfKjgC3KTp+bMOchwUujRbjc2fyivblsy5iTDIWt5lQNj/nA6
yWxdaysZhtLunKpvDADc8TAu2e1kkE5/VzmE7Ztd7Hw7RHnJkCGfm7SqHAym
PdmCO3aQIc86U+To72BwxizjMj8ZdMrjLPh9Q2HRkCg7vZsMTCltLkfsPQk6
MHZsUIgMYXOp3sIfwyC+mePMCxEyCEnXvOzZEwE7b6Zrl4uSYUzbs+pKSQTc
dDpk8ECMDOUH6tuZ4kwQO11JyBAnQ/uI5xY2OyYU8F2gp0iS4b1RdUX5fSYo
jPZZMKUwPCv2UyljTKh85mjrI00Gi1sPk0P2RcIrRqKXyREyFAzqxDAiI8Hw
6L5AQzkylIWZUeWeRMLHP4/CNRXI0NbTcXuoNxLM35+OUTpOhgceokuW65Ew
kdeRdEiJDI8TuNmK97HA1e/i1T0qZNjaGkSrOMmCXxfmb21XJcOTh3vSfI1Z
ECzCzPl7kgw79r24MGbNAvYfOwt+niJDBP2h6KoXCxKf3y2e0MDic4jlJaEs
2HVV6VnfGTKclzhRvzWKBbdsX9a0aZKBdOP07Fo0C8RPUlDDOQyf7CJ7DIsF
hdxfW0q0sXrP+r9/EMKC45/9Ou7pkMH6lYq8tScLqp9s+XjjAhmiB03/lVuy
QDPy5kCCPhleh/Oo5xmyoIUsMxqKI8OwvOmQnAoL8NI1Ux5GWP8urSwzhFnQ
u6o/Z21MBpeWosyjK5Fw8e3AEpVIhhG3lOWi95EwmeWyrkfG8DQsKwwXRIKb
58am01QyMNIVmR2BkbCklcJ1jI7p7f7vwyzdSAgVFNshaUIGI7ti5y07I6Gj
lNtU0wzDx/r+35n3WH/xy/nmFmSQfGP9Nj+JCc9j29VvWpEhOEpSKnka08fB
6phyGzKEZoTcMdKOAMvn995/sCNj++ivx1uuhwP7arA9jzMZbr2eKRMUCwNS
un2prCumj53kLR3UULh3nLSh606GeZ1rWWdjQuC8k+zVSG8yFDb1Kym0B0Hc
QF/DSjAZnPNLUjux+ej3f8m1O4wMme4yp3s3fEFG4ClZMYIMSrHP+FMWfaAN
F/vNJYoMMl2xLrLtXsDToCI4mkQGten/otuZznA154rr20wyXKUfHwnIxcG4
RljVdDYZjj7vjH/JPAcq/Y7sW+6SwX7KIeroJXno2Qm34D4Z9ksnFZ8WVEd7
WHMvKx6Tgeq4IY5GTJGT2ABf91MyKO9WK+r+cQnV1r4yWSjF4qvSC3YFWyOz
X5nzRyqx+T1VM2Pn44CybXH7chvJcOq6CVHrsieaZztp34DIEDha/OhYnReC
LMnSgSYyjKdsbHkw5o1Ge9Z0BVvJUBH0GDcm6YekLhR6J74jw7e6esptbP/z
Hb/W8OADGWIHKgaGLgajVxERXK+6yVB7pK9Pnh6C7Ktp2f/6yJhfKtj5XjEM
PZTlbPMdIUMd2jLYo81EXaLn1t3GMHyhv/XzsphoY0eYnMMEGXxNrCxjfjER
fmUp1WSaDMeuUzxUr0WiwG/HEQkz6T3bZs4MfI5Edz+7/sR9J8OaHb8LSLLQ
UtME+ewCGbpZr/y25bKQWKV4zMlFMvArvFE07GehCw/NK48vYXjnAvl5eKKQ
Z+atKdkV7H5psniqoRGFMi5/3HNwlQxFhsFVHXZRqJm100D0NxmsutaWKpKi
0A8/wxDBDTI8jLxD+FYchYSc4ov5/pJhN9unjxZvohCYNw9tZaPABefWkm2j
UcjZmG3HJnYKqC6Wqk//ikLXtE7Dbw4KfLFwW5zfFI3qTwR6/eKkQEG1TZTo
9mg0KVOe930rBbbcobc47YjG/MtC91duCvCFDzd95ItGp3bIcX7ZTgGfu1dK
zLijkTW7o2o/LwUeii7/9+dvFEpevufwYQcF6l/tVq6fj0KV019ute2iQGRR
r/ytwSj0ZXBf20sBCuTNsE+mN0Uhrnf09XpBDG83W1JlfhRSaromVylMgd5j
+mHsrChkXvHO4uleCrD3pBhFmEahmMLtlwv3USA27EadikIUenLnArq7H8Mv
2V1+9A8L9adG/cw4QIGTvPkk91YWYmc9l0yXoIDfD3r/1hQWOuq3Tk45SIEl
k5GSzXgWCjfzqYw4TAEB2Zz6S02RqBD/dCpQlgLtH7R8PvtFog/nZvd4H6XA
pzSOsDWpSCQlYxNie4wChxZmSiz8MX3syym2UKTAnRdqou17mCiAb3CIpkz5
//85C0nuEahtiQT6JynwLDjg8O73YcjjhRangiYF0uRzHkiqB6Nb5eGqh89R
QD31zy1V7SDU9KDWQVybAqWzfbkvdALR7lSlNv4LFOBU/1d2VM0f1ZpKXv4P
T4Gwzx2Hjn3yQluWNu19cZECXxsHM2ZTLdFqya3UCUsKrFDPbf/11AzNuh3b
zGVDgYjeI88/naSh91Pm83gHCqRu85MIvaiLMgarXn32oICc3ENeoWO6oPDS
zXuVSYGA9ncr5kkuIM7cPL0vigKaw0ZdUifcQeDMHQvNGArMfH9bWOriCauV
r/ViEyiAWvdcE9nkA01FBw/svkqB5fC3EhJz2L7uUJt+Mp0CPP1bftuKBMED
KeI2sxsU+Jx7dHFZMxiSs8OX72ZQ4ATpeM59v1CgXf309tg9CmyV+Bq27xwT
9Iw9z5HvY/1Kaoz/VsUEDZ6tVf4PKCD7b+/VA0ciQTxWJa/hEQVqmu96q7Ox
gF/7rfDoYwrQUh5vDNmwgJPNOmVzCQUcyt7+tW9iwUzQ5UBcOQUe3HASqfSI
gs+q0nPulRSIrvitpNsYBe9+1dtcraZAyDmfLuOt0dBUQv5UUUuBU25PmusM
oqHcbQb/qZ4CFtfZHX3jo6HgSGTzRiMFMtX2lduhaLg9Jawu/oICa4aWELYY
Dcn5T55qv8Tm7fu0fpFYDIRb6RxyeEUBXMB/1UPnY8BT7HNGYisFmi/+ObTN
LgZsBr13PnmD8bv50PDBiBig3eKO/fCWAjcPWk6JX4sBPWru+lIHBZrs1zjW
cmNAnf+k1573FPD/86DifmEMyL/rmNToooAgjxRIFsWAeLKt+aWPWH18Go9c
7scAv/76B1YvBYbMbZqZGTGwecvVCwX9mH5kOw9YJ8TAf00yDW8GKDAa8N8e
fu8YmIl4rvTjMwWM7z/rSqfEwOfTtMKdX7D8jFrVheMx8G7t+36VUQoYPXuy
dHRrDDRVRl2jj2P8z+QziX0YXz4i3CFfMf4cDu1yvRsND46XhmdPUaBk9HFm
vF00uAv+XKv6RgHfjmbfFaloUPl93O/DLAX4K79b1Q1Hwe9hz4WZHxS494SD
NX01CtDLEpfNC9h9c9goJu1cFMQWLkzuX6QAb9/0w9YZFhimHLc+uUSB1tZP
lfdSWdBPK2E4r2L3haeF4sOWSMjWWOiO+k2BwPC7BZxmkWArftw4a4MCO26V
bnGbYcLCt6c679mo4IZTyctfjgCusKdKqtxUuP+pO32lLQQ6reYfG2+nAk/O
AxLpUTCk6x6TdeKlwu67bfQvUUEgvvPpgcxdVNjxlqX2RiwA1O494WEXwX7b
8QaubPYGxzePJzuOUOG5S3HU9lgzUHjyw2pKjgqt1RLaaVVUWLoqP8R2jAow
95f96gtjYJo/7lZWpkJBYNnSGus43JovRrc1qHDgRcGRjRAyei1YnGFnSAWO
Qy2s7+6eKPX3rGAEngpZK0E/jnd7IcqXo1duEahA2P2zU0jZB40UPop7S8Hw
8JXdOz3hh1Y1HvkqWlChIr2Q5rEpBDWKz84bXKJCiEz85ZNqoSia86iLrRV2
3oBFVYkDti+9K7K6aUeFqs5cZYunEUjWugj/x40Kyaw/F8jfI9HrLPWSRQ8q
SLhXD/+yYCH7T227pr2o8K18txT1LQvlE2Y/dvlRQfNyqtvsrSiknRyi+joA
O3/vld7Z1Sg01rr9VkMQFQY3bF5pU6KRuKacWWEYFVbW8xozN6LR8+D6+qwI
LF/pgU9e+jHoYqWh2LVIKswy5/N1r8SgjZ+fI+KjqBAgpMHH9TEG3ZF3Gw2L
oYJBZ7RS/q5YpO70R8snjgruyNZum0Es6s9PyXdMoELgj3WVo2GxKGBk/5aL
SVQ4arbffbUoFgmJPnEgp1AhiFNO3K47FlXQz77Ru0wF2cziXLuVWES51nnk
7BUsfndi6rxAHFrsvJisfI0KzYd5etaOxqEr2+Z/yFzH6lkMfxJ6Ng4d140w
FruJ8TeTWOCFi0OdkTtKBW5ToST6dGY3KQ65NeTwc9+hwomftS+zKXGIZ+2Y
799MKmjbPn7wnhCHHqmgnl/ZVFAIxB9xvBCHDDwJJ7/lUiHbQD7WTi0OTT8a
uTWch+llaya+7WAcipvy/N2dTwVa0VuP29xxSPrgJvM3BZjeOtMV+r7FouaL
VxoaC6lgG/3jcEJzLLLJkDhQXoThO8hDqLwdi9h7S5kPi6kgCid/2jvForu7
tMayn2Dnf9EqyleORWDUpZ1eQgUd1TrX4NUYNBxvfT+hjApC5xqCl6piUFjz
4paIciq8vxlmK+4dg0TZohx9K6nwaFM4J+/hGFSrIdDmVE0FIsE7sq03Gq2W
KadQ6rHvHeR//JWORjfnXs7pN2L1s3O6ZbZGIdUjFIImosKEyNUvdJso5HPX
V+BIMxX+8xrZE5XMQnOXK27/e0uFuy8yrOwKmSjlrQ52X1LhRssdq3wpJpLb
2ms+8w7Tp/PP6genIpBT+MqBnm4qaOTteM/BEYYmXE8WFA1SwWatwiRCMxAN
6teUUWepYMw5/PffWRekZZzP8PtBhetPUkPPKjqiIsrlv+nzGN5Nro1B++xQ
8CU7g4+/qKCPv00urbRAIn67xkgbVMgwyQ5x3KaIGLlOuwi8NPivUnnXiqcD
oPuUKo8dNFAT8otwT3cGmUeaFpd30WCWvm/iTqkbrFYIPuwUpEHJ+vXo5hkv
uPn2BRiJ0eCwbld7bk8A/H1fPOkqToOzxQP7/zsXBPa9N5OTJWmw+RkXvvpB
MKiOuvW/labBQW3tkWGLMOhd2etpcIwGO1685f2pEglnNzYLOSvSYNQ65yXl
bSQUbFqoS1CmgeoOK/3v5izw52nZ+uYkDaqalQx5vKJgeFfp4+lTNLBc2reo
9SsKdIUzyVynsfMfdn3g9owGQUnvnAtAA9slmchyRgyEHrbQcdCiwY8dqQak
5hiYkNObjT1Pg2+B52lLsrFgqKR8pUCXBt9/ShSGJMRC+Umxky16NJAOKP/Z
NhYLome4h74a0OBSs8KdlhNxEK21xOI0ogFN8fNbCisOvl/4InPIGKuPtNfb
4nUcUIzaOs8TaRAx22nQtjUe6kkVvrZkGhz/4TodC/EgxcgViabS4IGeTQ3T
Ox6SLZLQPToNLLKE+B5kxcOStb/9SxMadt/jxWZfxIO5oxXPuBkNvAXE+OBL
PDS7GZaxX8T4YD+7mLEcD3I+JxmSljTY+nise3FzAlwLlPx7zpoGu9bYyoE3
AX6H8eZb2dLg6Vau1Ai+BLCOWtWPtKdBGp3HtJgrAdrix+dzHWnAMWrD17Ie
D0qpndeRMw3Gw8tyO6biIeNajcaIKw3CJe23tLTHA/vt/NF/7jT4EpinUl4U
D87Zl+MOeNEg6/2dAzmR8dB1L1he04cGOmpWNZeJ8cDPVlmj7kcD5u76O+5i
8UA2/6mjGkCD7EKecMOvcZBeLdelGESDoHEG8URBHHzc7XhRPoQGxRUOLFWr
OBD0ujcjE0aDMY3VlYtCcUDrGPaXiqDB7c13tj1/FQt9MdTL+6JosMdxo9xd
IBb2jKXtE46hwdXWSIXJ0hhgnG1/wB9Hg4rebo6vBjEwsKKFuJNoYLfl1Ps+
12gQIYcbcqbQIJah9/jvchSYPa3pZ7tMA5PB6AL+YMyfORz/+d9VGhQRpnn8
fVgg2uwS9isd06f6fw/Zv0WChfgD7vkbNEiNfF++YhIJw/37JSczaMDW+/Fm
pgITRvS3kz/m0aDr14st941C4OvRyfKSMhq8DW/xF+/zAOl4iXPF5TSYvHNL
VvWdK9hPmHc8qKTBX/kZa+nnTjCd2f01u5YGb7rZ/qYl2MAM7wuhlCbs74En
thsF4GBu/k6gUxcN+Fa/NiV1WCMFw77Ndh9pAFbkKp91O+RRyH/FshfTb8iV
83yHnNCCZcJD+gANOtgkpU85eqBfH/wHdMZoYEix/WDe7odUFMrsz03Q4JVe
wKTWhQDkm/hj8fQkDcRoInaL9YFoRct2u8oMptfd4a9O3gxBq8+IpyUXaXDD
2o+tKpyJeNRUOwWWaLDi4qJ4+EAkEq8XseRcoYH4mxNxL+oikV7zeNT0Gg22
M4dkP0+zkLnea8GBdRoI++lF8Adh+2h78YO3f2jg5vFS9MvmaHT7o9/bJ5vo
8PtVwnopXwx6wjC1yOWgw4G18LP+yTGo6fPZ+SucdCCEyw0ZcsaimYmtAn7c
dAgSOmpSMxWL/jp+z7ffToe8HA1VIWIc4v/xXpXBSwfHlrehAhVxSH35tqnG
Ljq4zEY/TXSNR/ig8O9yAnTwKH4R1vM8Hln/sQ4XE6QDubYwxpo3AflHXti5
U5gOfldwzP3UBJTIKZe3aS8djFkRzF83ElB2wk6VXyJ02MrX8V9XVwIq411+
NSFKB6lB3rpHXImo5coneq8YHRR2VG/xUEtEg4KN31rF6bD2vYe1wzoRLdzO
C6mRpEN8UaFuZEwi2iwWx/tIig6XYpcHa/IS0Z48l5xMaTrcUN04V1KTiOSk
CYqpMnQYHhFcMG9LRFCk8jLiCB0qvqz31XxMRBSFvVQvOTp8xQaqqT8ROZb9
mbRWoEPoRfkkn95EFKo6Fkg5Toebas6P33YkorTalm26SnSwmPWsaWtMRPln
H2WeVKHDB9k3It4PE1F102UFWVU6MM0KG5pTElG7ri8SUcP4hRd8rS6JaKSN
QeJRp0OdX/XvcO1EtIQ/M/FHgw6nPp358Wt3IuLqlvCfP0OH8Nm2dwojCWg/
fQvXqCYdftC2cKnfT0BKgzO3u85h/R5v95OwTUC6l94dbdamg5XiiOeiaAIy
HX/WUKFDB50cjZa6d/HI3eGW8YMLdNi+uKMiJTQesWZDR2/p02HjvP1s0MF4
dMPDyicRR4f+dWfWteY41Bhw5KabMR0WLM+p5i3Hoq51PtlLRDr0xv31b46J
RZMRv2oJZDpMaITS3HfGIr74+mFlOpZ/zmr5hSDm927hpX9fpMMhNmbI5XEW
8hZVrp61pINar/Cf7TgWis0VNhiyxvBzCDxgfxKJnhSOuCF7OpzdliI4Z89E
/6q9K2Ld6SBwr0PpLTEEfd5SlpTnSQeH6b1pGygI1VJ+WjV602Hc7ucXb5lA
5LvgwbfiT4cLzJ/m30d90fRhNwe7CDo8nTng5iXsirpuOOw9n0aH72YkCvtD
IXg6UTB/6Sod1lt4HPqDzkGy0uSrkHQ6DG7bvxy4gwAXOm29n93Cvl8bEv5T
fBHqOa3fSt7F9NZHfEh/7Qb3fc3DNpXRwYZq+co3NRRYTXfI+8vp8Gr9Yk3S
4XCw3Dkoe6qSDsuFagrvqyNApNik17OWDm2ZcqM8VpHw39qt4uR6OmRq/FLL
FWXBxwv9rMJGOoz+Vt7k2s2C1HHasZEmOnDKl/cPKkaDi+INzo1mOpzptaoT
+RQNehE9g8Kt2HxoJ3W1BscAxz5KvPFbOhiwbz5RVhwLI47XLrp0YP0MqT5+
43QcNFZ2qcS9o0M5sXTwREscBJKIo43ddDDxFerb2hIP1Ny0qoEeOpRkyFHm
NBJAae5dykofHWh5pxZWixJg5+kdtvwDmJ61J8hbBBLhRwJeXeEzprccc77/
fBKhrS9lp8EwhneiLftxRyIUHuqYtBuhw75NJ8P4xJMgxoenIXKMDubNk5Js
Lklg/QJ3LWuCDlX9x/hdniSB5o4kp5pJbD516oZOzSSBqEWbZs80HR6eUjtm
IpYMa0XcQj9nsPuDO7SjyiAZelf1vvP8oENsJG+erkcyPNONb5KZp0PRq72N
q0nJkJbeeuv8Tzr8k/5w8WVuMriPbfGw/IXxFXfkZ9bjZMAd19UJXaYDg4NH
kFWWDGw9PZt8/6ND8c1Z7ZGnyVAZZNfoskaHlou8ZwwKksFVbDnYZp0O3rTU
beh6Mki+jD5p9ocOhkma9trhydDvsHuJ9I8OvsGva/ouJUMqT36JwSYGsD21
FGOpJ8P5UmU3LQ4G8CaKm+vzJcNv6ktZdU4GPDvzbfrEYBKU/CZNKm5lwB3R
iUni3SSwzxnLk+VmACXotuRDS4yP896XJLYzQMs5Z6f+3iTomt4kupeXAV++
jLTB20SIT7nSv3MHA/6kh/He9U+Es0oS17l2McArSFs5dF8iFIVgT99uBiQy
fqcvERPAUvx927wQA7i/FAQ3jseD0KtLcVN7GNDZdSjF3CMeWHwRbH2iDJD4
xsaM8I0DtWd8DZ1iDDhlI3TuzFwszNGzg1rEGXBlJmscrGPB9G7DYoUUA2zC
2r3vnIqBnbpGTx9LY/iPKBepZkVDy8xnl/syDCjvGNHLXY8CJZWNiXQ5Bny/
cmTK7yELuFvV+3xUGKAgVSMkdScCGl3arrmoMmAkNW5qQzgcfHeaEmzUGGDt
cFCdNyUURkyC3pBOM8Ce6/JenFUQVH+vqlM8j+X7FrVvtB7b3/lP5M6TGWCp
dNIl35kEYlXN5lNUBqjRSkj3iLrw0Yyy9wudAZdI0t+SdhwDuO9ztdOMga1J
AgafHXTQHrWy6Mc2DFg9rnXLbMoGtVocc3LxwfrZOOV/mTcQ8ds41mX5YfVH
Ta3azAehi453ed8HMGDTl727drWFoBVvgTKVUAaEfg4wfeoQgaTi//v9J5oB
rZwvXhqIYO93ynGj43EMSD4jUTo0GYXqrjrlWCcwYKtm2uOqx9GIlDWo3ZrC
gEMh/kIGsrEoO2/3jbXLDNjTrB6ZNBSLvj0wmj56lQEl98ZEpZPiELPseXLa
DQao7+m5m/IhHrVXrQ433WJAnM3O1UWnBCTcoKi4nMEA2ZDuoLHfCci6yTnq
cBYDCAlPK+SjE9GT1ns9JjkMyL7dFFjImYR+t38+nHyXAZP/Rj7LRCQh3S7B
4MZ7GJ6mXbS4hSR0tQ/fvnCfAWmlJs+zTZLR0Oc4sYOFDFgT/GBvWJuMZMaQ
J7WIAQEcbHs9+VOQ79RaU1wxAzgehB39bpWC0HclwdonDDDb9S72fmEK4ll0
cfhegs2DJutp1GQKYvyXXyP2jAHapqxOz32p6N7G0HZiBQOeWuRVm1xIRXOb
hC9GVTGgN8dsWd45FalvJZRU1DCg+HND85eoVBTLk8A+XccA78pUKdv0VPRh
VxNFpJEBL7tufCy7k4pEhdcLDBGmpw0R05bbqchRVGUtvIkBdT8j2DNTU1G5
hBuutJkBjNfCX5WDUxHb4YKs8RYGFPDumUgzT0WGcl/mBd8wQI+vurj6RCq6
qbhHS+8tA7rm/CufcaaiMVVienAHA6aZCedS2lOQwunEyeJ3DGDn8KSQE1NQ
8LmXal8+MED8VHm1kGYKatHdSNz1kQGvUt6vzMwkI37DE0PavRgf8ueIkynJ
yILofsy/nwFhBNQoIZOMlsxGugc+Y/P/X/G2Nq0kBFZ7pXm/MKBs4qKo/8tE
lGRPCtQcZUBTodONEY1EJOnVLJr/FZsHJ1eHpN0JyN3/j3vvFMbHKxfdA37x
qDZE9QXXDBafS4rd0xmHiLGFdm5zDFg/tDtuwykWZSaNVuUsYP1n13hs9DgG
TaeJbOtaZEA1d8Lo+2/RiHkn+Ynqf5g+lSVEScZRqD33FZvTGqY3nz1prYEs
JFzwl3RnnQE1RV/bLDIjkfWjk/c7/jDg2j5lPLWWiZ6UeP737x/Wv6KDbSP3
I9D/AD4g+x4=
       "]]},
     Annotation[#, "Charting`Private`Tag$4717#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-979.4623195441312, 918.3135167063256}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7953884503595934`*^9, 3.795388479577155*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"bcb659e5-7ce7-44d3-a785-f4879ad283ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification", "Subsubsection",
 CellChangeTimes->{{3.7959269175060606`*^9, 3.7959269198298492`*^9}, {
  3.795926986512016*^9, 
  3.795926986855093*^9}},ExpressionUUID->"caa2bedd-b189-48e6-89ea-\
b4dba84d7bf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"catagories", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "n"], 
     SuperscriptBox["x", "n"]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795926930621002*^9, 3.7959269714329147`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5fe6c1ba-6368-4b44-bc14-1d275385895f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["a", "0"], ",", 
   RowBox[{"x", " ", 
    SubscriptBox["a", "1"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    SubscriptBox["a", "2"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "3"], " ", 
    SubscriptBox["a", "3"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "4"], " ", 
    SubscriptBox["a", "4"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "5"], " ", 
    SubscriptBox["a", "5"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "6"], " ", 
    SubscriptBox["a", "6"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "7"], " ", 
    SubscriptBox["a", "7"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "8"], " ", 
    SubscriptBox["a", "8"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "9"], " ", 
    SubscriptBox["a", "9"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "10"], " ", 
    SubscriptBox["a", "10"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7959269637125845`*^9, 3.7959269722727013`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"fd06c610-05db-4598-b0d9-d25119b1a0b0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regression", "Subsubsection",
 CellChangeTimes->{{3.7959269810013328`*^9, 
  3.7959269848285146`*^9}},ExpressionUUID->"4a53d24b-c20b-45ab-99d6-\
6a06239164a6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7959269901403494`*^9, 
  3.795927001147886*^9}},ExpressionUUID->"748c59c9-f9da-4a25-ba5d-\
ae8fa8509b99"],

Cell["\<\
(we are given the whole signal as an input to the network), and as an output, \
we want it to tell us what type of polynomial it is. This is assuming our \
function is a polynomial\
\>", "Text",
 CellChangeTimes->{{3.795927111388204*^9, 
  3.7959271516386423`*^9}},ExpressionUUID->"4ba6e8f6-c434-4334-88c9-\
0e923e42c520"],

Cell[TextData[{
 "input ",
 Cell[BoxData[
  FormBox[
   RowBox[{"signal", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{GridBox[{
        {
         RowBox[{"sample", " ", "taken", " ", "at", " ", 
          SubscriptBox["x", "1"]}]},
        {
         RowBox[{"sample", " ", "taken", " ", "at", " ", 
          SubscriptBox["x", "2"]}]},
        {
         RowBox[{"sample", " ", "taken", " ", "at", " ", 
          SubscriptBox["x", "3"]}]},
        {
         RowBox[{"sample", " ", "taken", " ", "at", " ", 
          SubscriptBox["x", "4"]}]},
        {
         RowBox[{"sample", " ", "taken", " ", "at", " ", 
          SubscriptBox["x", "5"]}]}
       }], "\[Rule]", " ", 
      RowBox[{"{", GridBox[{
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"},
         {"\[Placeholder]"}
        }]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "54da8e93-dfc6-4306-baa2-75fea4ac24ef"]
}], "Text",
 CellChangeTimes->{{3.7959270023965926`*^9, 
  3.795927105392229*^9}},ExpressionUUID->"ed882ed4-b27b-452c-9a7f-\
cf005812c591"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsubsection",ExpressionUUID->"4131e325-0cde-4d84-bf58-d95a64d5c03d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
  " ", 
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"b", "*", "x"}], "+", "c"}], "]"}]}], "+", "d"}]}]], "Input",
 CellChangeTimes->{{3.7959759325676937`*^9, 3.79597594381563*^9}, {
  3.796019588351788*^9, 3.7960195937479553`*^9}, {3.7960196309320507`*^9, 
  3.79601965043843*^9}, {3.7960202098907423`*^9, 3.7960202380221405`*^9}, {
  3.7960213247120924`*^9, 3.796021334191871*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"22931809-28d4-4efa-9350-8905386985e0"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "100"}], ","}], "]"}]], "Input",
 CellChangeTimes->{{3.7960213618981695`*^9, 3.7960214057425995`*^9}, 
   3.796021478322935*^9},ExpressionUUID->"ed4beb58-1d5e-47c0-afaf-\
bfbeceb278dd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dataset", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"dataset", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"f", "[", "x", "]"}]}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "6", ",", ".1"}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7960207034693747`*^9, 3.7960207250169487`*^9}, {
  3.796021338264826*^9, 3.796021357997938*^9}, {3.796021418834225*^9, 
  3.79602150457329*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"00d981a1-003a-44f9-aa02-2ac3c0ab6682"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prepend", "[", 
  RowBox[{
   RowBox[{"dataset", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796021049092785*^9, 3.796021052827114*^9}, {
  3.7960211224702363`*^9, 3.7960211527225366`*^9}, {3.796021486865612*^9, 
  3.7960215463478436`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"8e1b0c6a-7bb1-43d3-9de0-d42b3dd1f3ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", "c"}], "]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.1`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.2`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.30000000000000004`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.4`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.5`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.6000000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.7000000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.8`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"0.9`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.1`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.2000000000000002`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.3`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.4000000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.5`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.6`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7000000000000002`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.7000000000000002`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.8`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9000000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"1.9000000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.1`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.2`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3000000000000003`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.3000000000000003`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4000000000000004`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.4000000000000004`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.5`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.6`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.7`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8000000000000003`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.8000000000000003`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9000000000000004`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2.9000000000000004`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.1`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.2`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.2`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3000000000000003`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.3000000000000003`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.4000000000000004`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.5`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.6`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.6`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.7`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8000000000000003`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.8000000000000003`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.9000000000000004`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3.9000000000000004`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.1000000000000005`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.1000000000000005`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.2`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.3`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.4`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.5`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6000000000000005`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.6000000000000005`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.7`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.800000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.800000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4.9`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1000000000000005`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.1000000000000005`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.2`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.300000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.300000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.4`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.5`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6000000000000005`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.6000000000000005`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.7`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.800000000000001`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.800000000000001`", " ", "b"}], "+", "c"}], "]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"5.9`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"6.`", " ", "b"}], "+", "c"}], "]"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7960211399685264`*^9, 3.796021175099453*^9}, {
  3.7960214890309434`*^9, 3.7960215468550205`*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"e887c6c9-f656-4c79-9c99-f048c95d33e9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.796021177628612*^9, 3.7960211816074624`*^9}},
 CellLabel->"",ExpressionUUID->"793445bb-db4b-4ea9-b424-49346720eed4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "dataset", "]"}]], "Input",
 CellChangeTimes->{{3.796020479752387*^9, 3.796020667868945*^9}, {
  3.79602070984976*^9, 3.796020710742374*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"7b817427-26c5-4014-9bc7-b221086f0448"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw10XtIU3EUB/DrWs6pS51zU5NoFAvN6o+JSa/faQVaINQKNLLIpSaa+CA1
rcYkFTHDrPBRgo9hiqXQsMJCXC9Fmo8UnVouX7WcprPp1Dm3Wp194XL5cc/5
nMPv8iXJ4lgaRVGH/z62tz2Z+bmhjRkb5FGFLa2k8jn3iURkwXMXmQxgfa6Z
sZAgoS0DRFA8aX6TYMXvIyQnpXYh7oOV/NfGSUdwaXjbshXrp4iEr58Ci5Vc
ibPlBzmvKpv9MmbvnyGrhRqYeGgl3Spb5kig391il512T092jMan3yiy77NI
pK3LVS29G+gbSG7i4FzFghn7l8h93rPS+Pl1nGckqp8T2YoeE3qrJPK7Nj/i
wRp6a0Qj6rsgJavorZP3/swTRUNG9MwkLUtd4Be1jJ6F+Dp2+a4MGNCj4Ono
SxZD9BvrKchRcm6eatSj7wB7bkUXqfjz2E+D0UPi8HaDDudtgo5zsszH/Vr0
6KDvqQVJxzR6dHAqY1z8NjSB3maQdsl3BfA06DmCUiqgxOph9BgQU66sk68P
oOcEYXnFBd78XvScYPvYNY5C1IkeE6pb2mVBKUr0nEHZbNgnyHiBngtQqU2z
lZ0N6LkCpeeFRtLK0HMFmZx5OkOdhR4LKGU6zWcbB70tQDm8M8QmJqPnBrI7
tQcXV0rQc4e+q8aacUYd1rtDiO6IT++GAn13CBvZm6AbbCP/2oUewHnl1iS6
/hHneQDo9stZ3G702CCu0l1OGu5Hjw3lnP6+MxVq9NigTHFOKnn7FffxhK33
QipNfPv9ekIa39QtZE6jx4Hq5voDDDctehzwdxAWtu7WoceBKEHB9NmIX+h5
gSXQpV5z3P7/vUAuNigkY4vocSF+xLuBn2pAjwsxItMntnkJPS4QCWvmWLYR
PR6Icl/HTWlX0OPBJdYc6+TRNfS8gZ4XHE2/bSJ/ABnsrx4=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6.}, {0, 1.999573603041505}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7960203724743357`*^9, 3.796020509513733*^9, {3.7960205665170026`*^9, 
   3.7960205934408045`*^9}, 3.796020642482196*^9, {3.796020711184213*^9, 
   3.7960207273810024`*^9}, 3.7960211623938217`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b4249395-40d5-4eef-8fc6-da2a43c18c17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<Source/python/neuralNetworks/testData/mydataset.txt\>\"", ",", 
     "dataset", ",", "\"\<CSV\>\""}], "]"}], "\[IndentingNewLine]", 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.795975795563585*^9, 3.7959758024482136`*^9}, {
   3.795975857737725*^9, 3.795975858698165*^9}, {3.7959758957581296`*^9, 
   3.7959759278543053`*^9}, 3.7959760172124624`*^9, {3.7960196531213303`*^9, 
   3.7960196596709223`*^9}, {3.796020255374921*^9, 3.7960202843400407`*^9}, {
   3.796020364664791*^9, 3.7960203700899496`*^9}, 3.796021192406067*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"e2c09986-f961-4be3-ae93-daf3e3284b34"],

Cell[BoxData["\<\"Source/python/neuralNetworks/testData/mydataset.txt\"\>"], \
"Output",
 CellChangeTimes->{3.7959758081519365`*^9, 3.79597586266555*^9, 
  3.795975951805269*^9, 3.7959760198384085`*^9, 3.7960202651623917`*^9, 
  3.7960209297929287`*^9, 3.796021165443298*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2d2a3624-40d6-4e85-915b-4d9f713d27c0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  "\"\<Source/python/neuralNetworks/testData/mydataset.txt\>\"", 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[41]:=",ExpressionUUID->"a1ab93fb-a964-4abf-b6d4-b792b41124fc"]
}, Open  ]]
},
WindowSize->{683, 695},
WindowMargins->{{Automatic, -8}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 394, 10, 46, "Input",ExpressionUUID->"133769e7-b640-4691-9418-bfb38eff5b77"],
Cell[977, 34, 43850, 738, 227, "Output",ExpressionUUID->"bcb659e5-7ce7-44d3-a785-f4879ad283ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44864, 777, 218, 4, 44, "Subsubsection",ExpressionUUID->"caa2bedd-b189-48e6-89ea-b4dba84d7bf8"],
Cell[CellGroupData[{
Cell[45107, 785, 404, 10, 28, "Input",ExpressionUUID->"5fe6c1ba-6368-4b44-bc14-1d275385895f"],
Cell[45514, 797, 1050, 34, 36, "Output",ExpressionUUID->"fd06c610-05db-4598-b0d9-d25119b1a0b0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46613, 837, 165, 3, 44, "Subsubsection",ExpressionUUID->"4a53d24b-c20b-45ab-99d6-6a06239164a6"],
Cell[46781, 842, 154, 3, 28, "Input",ExpressionUUID->"748c59c9-f9da-4a25-ba5d-ae8fa8509b99"],
Cell[46938, 847, 332, 7, 56, "Text",ExpressionUUID->"4ba6e8f6-c434-4334-88c9-0e923e42c520"],
Cell[47273, 856, 1242, 39, 191, "Text",ExpressionUUID->"ed882ed4-b27b-452c-9a7f-cf005812c591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48552, 900, 80, 0, 44, "Subsubsection",ExpressionUUID->"4131e325-0cde-4d84-bf58-d95a64d5c03d"],
Cell[48635, 902, 625, 14, 28, "Input",ExpressionUUID->"22931809-28d4-4efa-9350-8905386985e0"],
Cell[49263, 918, 287, 7, 28, "Input",ExpressionUUID->"ed4beb58-1d5e-47c0-afaf-bfbeceb278dd"],
Cell[49553, 927, 915, 23, 67, "Input",ExpressionUUID->"00d981a1-003a-44f9-aa02-2ac3c0ab6682"],
Cell[CellGroupData[{
Cell[50493, 954, 461, 10, 28, "Input",ExpressionUUID->"8e1b0c6a-7bb1-43d3-9de0-d42b3dd1f3ee"],
Cell[50957, 966, 14013, 457, 413, "Output",ExpressionUUID->"e887c6c9-f656-4c79-9c99-f048c95d33e9"]
}, Open  ]],
Cell[64985, 1426, 165, 2, 28, "Input",ExpressionUUID->"793445bb-db4b-4ea9-b424-49346720eed4"],
Cell[CellGroupData[{
Cell[65175, 1432, 260, 4, 28, "Input",ExpressionUUID->"7b817427-26c5-4014-9bc7-b221086f0448"],
Cell[65438, 1438, 2648, 59, 245, "Output",ExpressionUUID->"b4249395-40d5-4eef-8fc6-da2a43c18c17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68123, 1502, 719, 13, 105, "Input",ExpressionUUID->"e2c09986-f961-4be3-ae93-daf3e3284b34"],
Cell[68845, 1517, 354, 5, 32, "Output",ExpressionUUID->"2d2a3624-40d6-4e85-915b-4d9f713d27c0"]
}, Open  ]],
Cell[69214, 1525, 227, 5, 28, "Input",ExpressionUUID->"a1ab93fb-a964-4abf-b6d4-b792b41124fc"]
}, Open  ]]
}
]
*)

